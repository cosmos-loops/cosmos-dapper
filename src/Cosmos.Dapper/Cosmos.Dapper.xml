<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Dapper</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Dapper.Actions.ActionCallingMode">
            <summary>
            Dapper action calling mode
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.ActionCallingMode.SyncMode">
            <summary>
            Sync mode
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.ActionCallingMode.AsyncMode">
            <summary>
            Async mode
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ActionKind">
            <summary>
            DapperAction kind
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.ActionKind.Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.ActionKind.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.ActionKind.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.ActionKind.Merge">
            <summary>
            Merge
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Delete.AsynchronousBatchDeleteAction`1">
            <summary>
            Asynchronous Batch Delete Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.AsynchronousBatchDeleteAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Delete.AsynchronousBatchDeleteAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.AsynchronousBatchDeleteAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Delete.AsynchronousDeleteAction`1">
            <summary>
            Asynchronous Delete Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.AsynchronousDeleteAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,`0,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Delete.AsynchronousDeleteAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entity"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.AsynchronousDeleteAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Delete.AsynchronousExpressionDeleteAction`1">
            <summary>
            Asynchronous Expression Delete Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.AsynchronousExpressionDeleteAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Delete.AsynchronousExpressionDeleteAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="predicateExpression"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.AsynchronousExpressionDeleteAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Delete.BatchDeleteAction`1">
            <summary>
            Batch Delete Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.BatchDeleteAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Delete.BatchDeleteAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.BatchDeleteAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Delete.DeleteAction`1">
            <summary>
            Delete Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.DeleteAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,`0,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Delete.DeleteAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entity"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.DeleteAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Delete.ExpressionDeleteAction`1">
            <summary>
            Expression Delete Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.ExpressionDeleteAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Delete.ExpressionDeleteAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="predicateExpression"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Delete.ExpressionDeleteAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Insert.AsynchronousBatchInsertAction`1">
            <summary>
            Asynchronous Batch Insert Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.AsynchronousBatchInsertAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Insert.AsynchronousBatchInsertAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.AsynchronousBatchInsertAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Insert.AsynchronousBulkInsertAction`1">
            <summary>
            Asynchronous Bulk Insert Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.AsynchronousBulkInsertAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Insert.AsynchronousBulkInsertAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.AsynchronousBulkInsertAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Insert.AsynchronousInsertAction`1">
            <summary>
            Asynchronous Insert Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.AsynchronousInsertAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,`0)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Insert.AsynchronousInsertAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.AsynchronousInsertAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Insert.BatchInsertAction`1">
            <summary>
            Batch Insert Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.BatchInsertAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Insert.BatchInsertAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.BatchInsertAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Insert.BulkInsertAction`1">
            <summary>
            Bulk Insert Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.BulkInsertAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Insert.BulkInsertAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.BulkInsertAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Insert.InsertAction`1">
            <summary>
            Insert Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.InsertAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,`0)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Insert.InsertAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Insert.InsertAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ISQLAction">
            <summary>
            Interface for SqlAction
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLAction.Dialect">
            <summary>
            Gets dialect
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLAction.Kind">
            <summary>
            Gets DapperAction kind
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLAction.CallingMode">
            <summary>
            Gets DapperAction calling mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLAction.Options">
            <summary>
            Gets Dapper Options
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLAction.IsExecuted">
            <summary>
            Is executed
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.IExecutableSQLAction">
            <summary>
            Interface for executable SqlAction
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.IExecutableSQLAction.ExecuteCalledFromBank">
            <summary>
            Execute called from bank...
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.IAsynchronousExecutableSQLAction">
            <summary>
            Interface for asynchronous executable SqlAction
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.IAsynchronousExecutableSQLAction.ExecuteCalledFromBankAsync(System.Threading.CancellationToken)">
            <summary>
            Execute called from bank async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.IHasBulkOpt">
            <summary>
            Interface for HasBulkOpt
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.IHasBulkOpt.ContextParams">
            <summary>
            Gets or sets Context params
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.IHasDataFilter">
            <summary>
            Interface for Has DataFilter
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.IHasDataFilter.Filters">
            <summary>
            Gets or sets filters
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.IHasRootActionBank">
            <summary>
            Interface for HasRoot SqlAction bank
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.IHasRootActionBank.RootActionBank">
            <summary>
            Gets or sets root SqlAction bank
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ISQLActionAsyncEntry">
            <summary>
            Interface for asynchronous SqlAction entry
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry.Insert``1(``0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry.Update``1(``0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry.Delete``1(``0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry.BatchInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry.BatchUpdate``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry.BatchDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ISQLActionEntry">
            <summary>
            Interface for SqlAction entry
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry.Insert``1(``0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry.Update``1(``0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry.Delete``1(``0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry.BatchInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry.BatchUpdate``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry.BatchDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1">
            <summary>
            Interface for asynchronous SqlAction entry
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1.Insert(`0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1.Update(`0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1.BatchInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1.BatchUpdate(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionAsyncEntry`1.BatchDelete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ISQLActionEntry`1">
            <summary>
            Interface for SqlAction entry
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry`1.Insert(`0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry`1.Update(`0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry`1.BatchInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry`1.BatchUpdate(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.ISQLActionEntry`1.BatchDelete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.ISQLActionSet">
            <summary>
            Interface for SqlAction sets
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLActionSet.CallingMode">
            <summary>
            Gets calling mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.ISQLActionSet.Options">
            <summary>
            Get dapper options
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLAction">
            <summary>
            SqlAction
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.ActionBankGetter">
            <summary>
            Gets SqlAction bank getter
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.SQLAction._mappingConfig">
            <summary>
            Dapper mapping config
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.SQLAction._connector">
            <summary>
            Dapper connector
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLAction.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Actions.ActionCallingMode,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLAction" />
            </summary>
            <param name="rootActionBank"></param>
            <param name="kind"></param>
            <param name="callingMode"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.Dialect">
            <summary>
            Gets sql dialect
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.Kind">
            <summary>
            Get DapperAction kink
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.CallingMode">
            <summary>
            Gets SqlAction calling mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.Options">
            <summary>
            Get Dapper options
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.IsExecuted">
            <summary>
            Is executed
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLAction.TransactionWrapper">
            <summary>
            Gets transaction wrapper
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLAction.StoreActionToBank(Cosmos.Dapper.Actions.ISQLAction)">
            <summary>
            Store SqlAction into bank...
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLAction.MixedDataFilter``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Mixed Sql DataFilter
            </summary>
            <param name="filters"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionAsyncEntry">
            <summary>
            Asynchronous SqlAction entry
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLActionAsyncEntry.ActionBankGetter">
            <summary>
            Gets SqlAction bank getter
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionAsyncEntry" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.StoreActionToBank(Cosmos.Dapper.Actions.ISQLAction)">
            <summary>
            Store SqlAction into bank
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.MixedDataFilter``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Mixed DataFilter
            </summary>
            <param name="filters"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.Insert``1(``0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.Update``1(``0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.Delete``1(``0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.BatchInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.BatchUpdate``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.BatchDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.BulkInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Bulk insert
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Delete
            </summary>
            <param name="predicateExpression"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionSyncEntry">
            <summary>
            SqlAction entry
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLActionSyncEntry.ActionBankGetter">
            <summary>
            Gets SqlAction bank getter
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionSyncEntry" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.StoreActionToBank(Cosmos.Dapper.Actions.ISQLAction)">
            <summary>
            Store SqlAction into bank
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.MixedDataFilter``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Mixed DataFilter
            </summary>
            <param name="filters"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.Insert``1(``0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.Update``1(``0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.Delete``1(``0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.BatchInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch insert 
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.BatchUpdate``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.BatchDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.BulkInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Bulk insert
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Delete
            </summary>
            <param name="predicateExpression"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1">
            <summary>
            Asynchronous SqlAction Entry
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.#ctor(Cosmos.Dapper.Actions.SQLActionSet{`0},Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.Insert(`0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.Update(`0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.BatchInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.BatchUpdate(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.BatchDelete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bulk insert
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncEntry`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Delete
            </summary>
            <param name="predicateExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionSyncEntry`1">
            <summary>
            SqlAction entry
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.#ctor(Cosmos.Dapper.Actions.SQLActionSet{`0},Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionSyncEntry`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.Insert(`0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.Update(`0,System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.BatchInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch insert
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.BatchUpdate(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Batch update
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.BatchDelete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Batch delete
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bulk insert
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncEntry`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Delete
            </summary>
            <param name="predicateExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionSetBase">
            <summary>
            SqlAction Sets base
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Actions.SQLActionSetBase._sqlActions">
            <summary>
            Gets a list of SqlAction
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSetBase.#ctor(Cosmos.Dapper.Core.IDapperConnector,Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionSetBase" />
            </summary>
            <param name="connector"></param>
            <param name="config"></param>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLActionSetBase.CallingMode">
            <summary>
            Gets calling mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Actions.SQLActionSetBase.Options">
            <summary>
            Gets dapper options
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSetBase.AddSQLAction(Cosmos.Dapper.Actions.ISQLAction)">
            <summary>
            Add SqlAction
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSetBase.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSetBase.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionSet">
            <summary>
            SqlAction Sets
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSet.#ctor(Cosmos.Dapper.Core.IDapperConnector,Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionSet" />
            </summary>
            <param name="connector"></param>
            <param name="config"></param>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionSet`1">
            <summary>
            SqlAction Sets
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSet`1.#ctor(Cosmos.Dapper.Core.IDapperConnector,Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionSet`1" />
            </summary>
            <param name="connector"></param>
            <param name="config"></param>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionAsyncBase">
            <summary>
            Asynchronous SqlAction base
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionAsyncBase" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="kind"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndInsert``1(``0)">
            <summary>
            And insert...
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndUpdate``1(``0,System.Boolean)">
            <summary>
            And update...
            </summary>
            <param name="entity"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndDelete``1(``0)">
            <summary>
            And delete...
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndBatchInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And batch insert...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndBatchUpdate``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            And batch update...
            </summary>
            <param name="entities"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndBatchDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And batch delete...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndBulkInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And bulk insert...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionAsyncBase.AndDelete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            And delete...
            </summary>
            <param name="predicateExpression"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLActionSyncBase">
            <summary>
            SqlAction base
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLActionSyncBase" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="kind"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndInsert``1(``0)">
            <summary>
            And insert...
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndUpdate``1(``0)">
            <summary>
            And update...
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndDelete``1(``0)">
            <summary>
            And delete...
            </summary>
            <param name="entity"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndBatchInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And batch insert...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndBatchUpdate``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And batch update...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndBatchDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And batch delete...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndBulkInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            And bulk insert...
            </summary>
            <param name="entities"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLActionSyncBase.AndDelete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            And delete...
            </summary>
            <param name="predicateExpression"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.AsynchronousBatchSQLAction`1">
            <summary>
            Asynchronous Batch SqlAction
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.AsynchronousBatchSQLAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.AsynchronousBatchSQLAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="kind"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="T:Cosmos.Dapper.Actions.AsynchronousSQLAction`1">
            <summary>
            Asynchronous SqlAction
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.AsynchronousSQLAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.AsynchronousSQLAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="kind"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="T:Cosmos.Dapper.Actions.BatchSQLAction`1">
            <summary>
            Batch SQLAction
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.BatchSQLAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.BatchSQLAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="kind"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="T:Cosmos.Dapper.Actions.SQLAction`1">
            <summary>
            SqlAction
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.SQLAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Actions.ActionKind,Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.SQLAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="kind"></param>
            <param name="contextParams"></param>
            <param name="filters"></param>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Update.AsynchronousBatchUpdateAction`1">
            <summary>
            Asynchronous Batch Update Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.AsynchronousBatchUpdateAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0},Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Update.AsynchronousBatchUpdateAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.AsynchronousBatchUpdateAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Update.AsynchronousUpdateAction`1">
            <summary>
            Asynchronous Update Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.AsynchronousUpdateAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,`0,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Update.AsynchronousUpdateAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.AsynchronousUpdateAction`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Update.BatchUpdateAction`1">
            <summary>
            Batch Update Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.BatchUpdateAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,System.Collections.Generic.IEnumerable{`0},Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Update.BatchUpdateAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.BatchUpdateAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Actions.Update.UpdateAction`1">
            <summary>
            Update Action
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.UpdateAction`1.#ctor(Cosmos.Dapper.Actions.SQLActionSetBase,Cosmos.Dapper.Core.IDapperContextParams,`0,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Actions.Update.UpdateAction`1" />
            </summary>
            <param name="rootActionSet"></param>
            <param name="contextParams"></param>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
        </member>
        <member name="M:Cosmos.Dapper.Actions.Update.UpdateAction`1.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Conventions.ConventionBase">
            <summary>
            Convention base
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Conventions.ConventionBase.ConventionConfigs">
            <summary>
            Gets convention configs
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.ConventionBase.Properties">
            <summary>
            Gets properties
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.ConventionBase.Properties``1">
            <summary>
            Gets properties
            </summary>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Conventions.ConventionConfig">
            <summary>
            Convention config
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Conventions.ConventionConfig.PropertyPredicates">
            <summary>
            Gets property predicates
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Conventions.ConventionConfig.PropertyConvention">
            <summary>
            Gets property convention
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.ConventionConfig.Filter(System.Func{System.Reflection.PropertyInfo,System.Boolean})">
            <summary>
            Sets flter
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.ConventionConfig.Configure(System.Action{Cosmos.Dapper.Conventions.PropertyConventionStrategy})">
            <summary>
            Configure
            </summary>
            <param name="configure"></param>
        </member>
        <member name="T:Cosmos.Dapper.Conventions.PropertyConventionStrategy">
            <summary>
            Property convention strategy
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.PropertyConventionStrategy.HasColumnName(System.String)">
            <summary>
            Has column name
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.PropertyConventionStrategy.HasPrefix(System.String)">
            <summary>
            Has prefix
            </summary>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.PropertyConventionStrategy.CaseSensitive">
            <summary>
            Sets case sensitive
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.PropertyConventionStrategy.CaseInsensitive">
            <summary>
            Sets case insensitive
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Conventions.PropertyConventionStrategy.Transform(System.Func{System.String,System.String})">
            <summary>
            Transform
            </summary>
            <param name="transformer"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Binders.BindingTypeMap">
            <summary>
            Binding type map
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.BindingTypeMap.#ctor(System.Type,Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.Binders.BindingTypeMap" />
            </summary>
            <param name="entityType"></param>
            <param name="classMap"></param>
        </member>
        <member name="T:Cosmos.Dapper.Core.Binders.MultiTypeMap">
            <summary>
            Multi type map
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.MultiTypeMap.#ctor(Dapper.SqlMapper.ITypeMap[])">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.Binders.MultiTypeMap" />
            </summary>
            <param name="mappers"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.MultiTypeMap.FindConstructor(System.String[],System.Type[])">
            <summary>
            Find constructor by names and parameters' type
            </summary>
            <param name="names"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.MultiTypeMap.FindExplicitConstructor">
            <summary>
            Find explicit constructor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.MultiTypeMap.GetConstructorParameter(System.Reflection.ConstructorInfo,System.String)">
            <summary>
            Gets constructor parameter by given constructor and column name
            </summary>
            <param name="constructor"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.MultiTypeMap.GetMember(System.String)">
            <summary>
            Gets member by given column name
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Binders.SyncBindingManager">
            <summary>
            Sync binding manager
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Binders.SyncBindingManager.Sync(Cosmos.Dapper.IClassMapGetter)">
            <summary>
            Sync...
            </summary>
            <param name="mappingConfig"></param>
        </member>
        <member name="T:Cosmos.Dapper.Core.Configs.DapperConfigAccessor">
            <summary>
            Dapper configuration accessor
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperConfigAccessor.Cache(System.String)">
            <summary>
            Gets cache by key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperConfigAccessor.RefreshCache(System.String,Cosmos.Dapper.DapperConfig)">
            <summary>
            Refresh cache
            </summary>
            <param name="key"></param>
            <param name="config"></param>
        </member>
        <member name="T:Cosmos.Dapper.Core.Configs.DapperGlobalRegistrar">
            <summary>
            Dapper global registrar
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperGlobalRegistrar.RegisterForCosmosDapper">
            <summary>
            Register for Cosmos Dapper
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.Configs.DapperOptionManager">
            <summary>
            Dapper option manager
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperOptionManager.Get(System.String)">
            <summary>
            Get dapper option by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperOptionManager.Get``1">
            <summary>
            Get dapper option by typed context
            </summary>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperOptionManager.Get``1(System.String)">
            <summary>
            Get dapper option by typed context and name
            </summary>
            <param name="name"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperOptionManager.Set(Cosmos.Dapper.DapperOptions)">
            <summary>
            Sets dapper option
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.Configs.DapperOptionManager.Set``1(System.String,Cosmos.Dapper.DapperOptions{``0})">
            <summary>
            Sets dapper options
            </summary>
            <param name="name"></param>
            <param name="options"></param>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="T:Cosmos.Dapper.Core.Contextual.DapperContextualManager">
            <summary>
            Dapper contextual manager
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Core.Contextual.DapperContextualManager.ON_MODEL_CREATING">
            <summary>
            On model creating...
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Contextual.DapperContextualManager.ModelCreatingCall``1(``0,Cosmos.Dapper.DapperConfig)">
            <summary>
            Model creating call
            </summary>
            <param name="context"></param>
            <param name="mappingConfig"></param>
            <typeparam name="TContext"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Core.Contextual.DapperContextualManager.GetAllProperties``2">
            <summary>
            Gets all properties by given type of Context and Connection
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TConnection"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Contextual.DapperSetsManager">
            <summary>
            DapperSets manager
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.Contextual.IWithConnection`1">
            <summary>
            Interface for WithConnection
            </summary>
            <typeparam name="TConnection"></typeparam>
        </member>
        <member name="P:Cosmos.Dapper.Core.Contextual.IWithConnection`1.Connector">
            <summary>
            Gets connector
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.Contextual.IWithSQLGenerator">
            <summary>
            Interface for WithSqlGenerator
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.Contextual.IWithSQLGenerator.SqlGenerator">
            <summary>
            Gets SqlGenerator
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.DapperConnector">
            <summary>
            Dapper connector
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.#ctor(System.Data.Common.DbConnection,Cosmos.Dapper.IDapperMappingConfig,Cosmos.Data.Statements.ISQLGenerator)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.DapperConnector" />
            </summary>
            <param name="connection"></param>
            <param name="config"></param>
            <param name="sqlGenerator"></param>
        </member>
        <member name="P:Cosmos.Dapper.Core.DapperConnector.Connection">
            <summary>
            Gets connection
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.DapperConnector.HasActiveTransaction">
            <summary>
            Has active transaction
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begin transaction
            </summary>
            <param name="il"></param>
        </member>
        <member name="P:Cosmos.Dapper.Core.DapperConnector.TransactionWrapper">
            <summary>
            Gets transaction wrapper
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Commit">
            <summary>
            Commit
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Rollback">
            <summary>
            Rollback
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.RunInTransaction(System.Action)">
            <summary>
            Run in transaction
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.RunInTransaction``1(System.Func{``0})">
            <summary>
            Run in transaction
            </summary>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Insert``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction)">
            <summary>
            Insert
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.InsertAsync``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Insert
            </summary>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.InsertAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Insert``1(``0,System.Data.IDbTransaction)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.InsertAsync``1(``0,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Insert``1(``0)">
            <summary>
            Insert
            </summary>
            <param name="entity"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.InsertAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Update``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.UpdateAsync``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Update``1(``0,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.UpdateAsync``1(``0,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Update``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.UpdateAsync``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Update``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.UpdateAsync``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(``0,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(``0,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Get``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get
            </summary>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetAsync``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get async
            </summary>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Get``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get
            </summary>
            <param name="id"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetAsync``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get async
            </summary>
            <param name="id"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetMultiple(Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction)">
            <summary>
            Get multiple
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetMultipleAsync(Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Get multiple async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetMultiple(Cosmos.Dapper.SQLMultiplePredicate)">
            <summary>
            Get multiple
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetMultipleAsync(Cosmos.Dapper.SQLMultiplePredicate,System.Threading.CancellationToken)">
            <summary>
            Get multiple async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.ClearCache">
            <summary>
            Clear cache
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetNextGuid">
            <summary>
            Get next guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetMap``1">
            <summary>
            Get map
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetActionEntry(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetActionEntry``1(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetAsynchronousActionEntry(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get Asynchronous DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetAsynchronousActionEntry``1(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get Asynchronous DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOne``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filter"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOneAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOne``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOneAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetListAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetListAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSet``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSetAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSet``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSetAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get count by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get count by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Delete``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.DeleteAsync``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOne``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOneAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOne``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetOneAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.First``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.First``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.FirstOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Single``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Single``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.SingleOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetList``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetListAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetList``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetListAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPage``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPageAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPage``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetPageAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSet``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSetAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSet``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.GetSetAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Count``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get count by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.CountAsync``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.Count``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get count by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector.CountAsync``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DapperConnector`1">
            <summary>
            Dapper connector
            </summary>
            <typeparam name="TConnection"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperConnector`1.#ctor(`0,Cosmos.Dapper.IDapperMappingConfig,Cosmos.Data.Statements.ISQLGenerator)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.DapperConnector" />
            </summary>
            <param name="connection"></param>
            <param name="config"></param>
            <param name="sqlGenerator"></param>
        </member>
        <member name="P:Cosmos.Dapper.Core.DapperConnector`1.RawConnection">
            <summary>
            Gets raw connection
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.DapperConnector`1.RawConnectionType">
            <summary>
            Gets type of raw connection
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.DapperImplementor">
            <summary>
            Dapper implementor
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.#ctor(Cosmos.Dapper.IDapperMappingConfig,Cosmos.Data.Statements.ISQLGenerator)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.DapperImplementor" />
            </summary>
            <param name="config"></param>
            <param name="generator"></param>
        </member>
        <member name="P:Cosmos.Dapper.Core.DapperImplementor.SQLGenerator">
            <summary>
            Gets sql generator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetPredicate(Cosmos.Dapper.Mapper.IClassMap,System.Object)">
            <summary>
            Gets predicate
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetIdPredicate(Cosmos.Dapper.Mapper.IClassMap,System.Object)">
            <summary>
            Gets id predicate
            </summary>
            <param name="classMap"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetKeyPredicate``1(Cosmos.Dapper.Mapper.IClassMap,``0)">
            <summary>
            Gets key predicate
            </summary>
            <param name="classMap"></param>
            <param name="entity"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetKeyPredicate``1(Cosmos.Dapper.Mapper.IClassMap,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets key predicate
            </summary>
            <param name="classMap"></param>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetEntityPredicate(Cosmos.Dapper.Mapper.IClassMap,System.Object)">
            <summary>
            Gets entity predicate
            </summary>
            <param name="classMap"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ConvertToPredicate``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Convert to predicate
            </summary>
            <param name="expression"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Delete``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.DeleteAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Delete``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.DeleteAsync``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Delete``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.DeleteAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Delete``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.DeleteAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Get``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get
            </summary>
            <param name="connection"></param>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get async
            </summary>
            <param name="connection"></param>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Count``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Count
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.CountAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Count``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Count
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.CountAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetList``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get list
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetListAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get list async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetList``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get list
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetListAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get list async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQueryListCommand``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Execute command to query list
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQueryListCommandAsync``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Execute command to query list async
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetMultiple(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction)">
            <summary>
            Get multiple
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetMultipleAsync(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Get multiple async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetMultipleByBatch(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Get multiple by batch
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetMultipleByBatchAsync(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get multiple by batch async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetMultipleBySequence(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Get multiple by sequence
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetMultipleBySequenceAsync(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get multiple by sequence async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetOne``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetOneAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetOne``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetOneAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQueryOneCommand``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Execute command to query one
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQueryOneCommandAsync``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Threading.CancellationToken,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Execute command to query one async
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="cancellationToken"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Cosmos.Dapper.Core.DapperImplementor.QueryOneType">
            <summary>
            Query one type
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Core.DapperImplementor.QueryOneType.First">
            <summary>
            First
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Core.DapperImplementor.QueryOneType.FirstOrDefault">
            <summary>
            First or default
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Core.DapperImplementor.QueryOneType.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Core.DapperImplementor.QueryOneType.SingleOrDefault">
            <summary>
            Single or default
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetPage``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get page
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetPageAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get page async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetPage``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get page
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetPageAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get page async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQueryPageCommand``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Execute command to query page
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="page"></param>
            <param name="resultsPerPage"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQueryPageCommandAsync``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Execute command to query page async
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="page"></param>
            <param name="resultsPerPage"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetSet``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get set
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetSetAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get set async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetSet``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get set
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.GetSetAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get set async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQuerySetCommand``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Execute command to query a set
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="firstResult"></param>
            <param name="maxResults"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.ExecuteQuerySetCommandAsync``1(System.Data.IDbConnection,Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Execute command to query a set async
            </summary>
            <param name="connection"></param>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="firstResult"></param>
            <param name="maxResults"></param>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Insert``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction)">
            <summary>
            Insert
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.InsertAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Insert``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction)">
            <summary>
            Insert
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.InsertAsync``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Update``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.UpdateAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.Update``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DapperImplementor.UpdateAsync``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DataFiltering.GlobalLevelDataFilteringStrategy`1">
            <summary>
            Global level data filter strategy
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Cosmos.Dapper.Core.DataFiltering.GlobalLevelDataFilteringStrategy`1.TypeOfEntity">
            <summary>
            Gets type of entity
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.DataFiltering.GlobalLevelDataFilteringStrategy`1.PredicateExpression">
            <summary>
            Gets predicate expression
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.GlobalLevelDataFilteringStrategy`1.GetFilteringPredicate">
            <summary>
            Gets filtering predicate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.GlobalLevelDataFilteringStrategy`1.GetSignature">
            <summary>
            Gets signature
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DataFiltering.RepositoryLevelDataFilteringStrategy`1">
            <summary>
            Repository level data filter strategy
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Cosmos.Dapper.Core.DataFiltering.RepositoryLevelDataFilteringStrategy`1.TypeOfRepository">
            <summary>
            Gets type of repository
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.DataFiltering.RepositoryLevelDataFilteringStrategy`1.TypeOfEntity">
            <summary>
            Gets type of entity
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.DataFiltering.RepositoryLevelDataFilteringStrategy`1.PredicateExpression">
            <summary>
            Gets predicate expresson
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.RepositoryLevelDataFilteringStrategy`1.GetFilteringPredicate">
            <summary>
            Gets filting predicate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.RepositoryLevelDataFilteringStrategy`1.GetSignature">
            <summary>
            Gets signature
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DataFiltering.DataFilterMixer">
            <summary>
            Data filter mixer
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.DataFilterMixer.Mix(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Mix
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DataFiltering.GlobalDataFilterManager">
            <summary>
            Global data filter manager
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.GlobalDataFilterManager.Register(System.ValueTuple{System.Type,System.Type},Cosmos.Data.Statements.ISQLPredicate)">
            <summary>
            Register
            </summary>
            <param name="key"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.GlobalDataFilterManager.Register``1(Cosmos.Dapper.Core.DataFiltering.GlobalLevelDataFilteringStrategy{``0})">
            <summary>
            Register
            </summary>
            <param name="strategy"></param>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.GlobalDataFilterManager.GetFilter(System.ValueTuple{System.Type,System.Type})">
            <summary>
            Gets filter
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DataFiltering.IDataFilteringStrategy">
            <summary>
            Interface for data filter strategy
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.IDataFilteringStrategy.GetFilteringPredicate">
            <summary>
            Get filtering predicate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.IDataFilteringStrategy.GetSignature">
            <summary>
            Get signature
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DataFiltering.RepoLevelDataFilterManager">
            <summary>
            Repository level data filter manager
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.RepoLevelDataFilterManager.IsContainerKey(System.ValueTuple{System.Type,System.Type})">
            <summary>
            Is contains key...
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.RepoLevelDataFilterManager.Register(System.ValueTuple{System.Type,System.Type},Cosmos.Data.Statements.ISQLPredicate)">
            <summary>
            Register
            </summary>
            <param name="key"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.DataFiltering.RepoLevelDataFilterManager.GetFilter(System.ValueTuple{System.Type,System.Type})">
            <summary>
            Gets filter
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.DynamicQuery.DynamicExpressionResolver">
            <summary>
            Dynamic expression resolver
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.DynamicQuery.DynamicExpressionResolver.ResolveExprTree``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Resolve expression to sql predicate
            </summary>
            <param name="expression"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Helpers.DynamicParameterConverter">
            <summary>
            Dynamic parameter converter
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Helpers.DynamicParameterConverter.ToDynamicParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            To dynamic parameters
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Helpers.ReflectionHelper">
            <summary>
            Reflection helper
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.IDapperConnector">
            <summary>
            Interface for Dapper connector
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.IDapperConnector.HasActiveTransaction">
            <summary>
            Has active transaction
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.IDapperConnector.Connection">
            <summary>
            Gets connection
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begin transaction
            </summary>
            <param name="il"></param>
        </member>
        <member name="P:Cosmos.Dapper.Core.IDapperConnector.TransactionWrapper">
            <summary>
            Gets transaction wrapper
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.Commit">
            <summary>
            Commit
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.Rollback">
            <summary>
            Rollback
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.RunInTransaction(System.Action)">
            <summary>
            RUn in tranaction
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetMultiple(Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction)">
            <summary>
            Get multiple
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetMultipleAsync(Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Get multiple async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetMultiple(Cosmos.Dapper.SQLMultiplePredicate)">
            <summary>
            Get multiple
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetMultipleAsync(Cosmos.Dapper.SQLMultiplePredicate,System.Threading.CancellationToken)">
            <summary>
            Get multiple async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.ClearCache">
            <summary>
            Clear cache
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetNextGuid">
            <summary>
            Get next guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetMap``1">
            <summary>
            Get map
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetActionEntry(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetActionEntry``1(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get Entity DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetAsynchronousActionEntry(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get Asynchronous DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperConnector.GetAsynchronousActionEntry``1(Cosmos.Dapper.Core.IDapperContextParams,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get Asynchronous Entity DapperAction entry
            </summary>
            <param name="contextParams"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.IDapperConnector`1">
            <summary>
            Interface for Dapper Connector
            </summary>
            <typeparam name="TConnection"></typeparam>
        </member>
        <member name="P:Cosmos.Dapper.Core.IDapperConnector`1.RawConnection">
            <summary>
            Gets raw connection
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.IDapperConnector`1.RawConnectionType">
            <summary>
            Gets type of raw connection
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Core.IDapperContextParams">
            <summary>
            Interface for Dapper Context params
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperContextParams.GetConfig">
            <summary>
            Gets Dapper mapping config
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperContextParams.GetOptions">
            <summary>
            Gets Dapper options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperContextParams.GetSqlGenerator">
            <summary>
            Gets sql generator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperContextParams.GetBulkInsertOperator(Cosmos.Dapper.Core.IDapperConnector)">
            <summary>
            Gets bulk insert operator
            </summary>
            <param name="connector"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.IDapperImplementor">
            <summary>
            Interface for Dapper Implementor
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Core.IDapperImplementor.SQLGenerator">
            <summary>
            Gets sql generator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Get``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get
            </summary>
            <param name="connection"></param>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get async
            </summary>
            <param name="connection"></param>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Insert``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction)">
            <summary>
            Insert
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Insert``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction)">
            <summary>
            Insert
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.InsertAsync``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.InsertAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert async
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Update``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.UpdateAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Update``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.UpdateAsync``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Delete``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Delete``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.DeleteAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.DeleteAsync``1(System.Data.IDbConnection,System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Delete``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.DeleteAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetOne``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetOneAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetList``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get list
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetListAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get list async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetPage``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get page
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetPageAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get page async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetSet``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a set
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetSetAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a se async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Count``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Count
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.CountAsync``1(System.Data.IDbConnection,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Delete``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.DeleteAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetOne``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetOneAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetList``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get list
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetListAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get list async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetPage``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get page
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetPageAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get page async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetSet``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Get a set
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetSetAsync``1(System.Data.IDbConnection,System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get a set async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.Count``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Get count
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.CountAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Get count async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetMultiple(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction)">
            <summary>
            Get multiple
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.IDapperImplementor.GetMultipleAsync(System.Data.IDbConnection,Cosmos.Dapper.SQLMultiplePredicate,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Get multiple async
            </summary>
            <param name="connection"></param>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.InternalDapperRegistrar">
            <summary>
            Internal dapper registrar
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.InternalDapperRegistrar.GuardDapperOptions(Cosmos.Dapper.DapperOptions)">
            <summary>
            Guard dapper options
            </summary>
            <param name="options"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1">
            <summary>
            Entity map scanner
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1.#ctor(System.Type)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1" />
            </summary>
            <param name="entityMapType"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1.#ctor(System.Type,System.String)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1" />
            </summary>
            <param name="entityMapType"></param>
            <param name="limitedAssemblies"></param>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1.GetSkipAssembliesNamespaces">
            <summary>
            Gets skip assemblies namespaces
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1.GetLimitedAssembliesNamespaces">
            <summary>
            Gets limited assemblies namespaces
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.EntityMapScanner`1.TypeFilter">
            <summary>
            Type filter
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Mapping.MapBaseExtension">
            <summary>
            Extensions for MapBase
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.MapBaseExtension.IsMatchedEntityMappingRule(System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            Is matched entity mapping rule
            </summary>
            <param name="type"></param>
            <param name="bodyTypes"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.Mapping.IMap">
            <summary>
            Interface for map
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.Mapping.IMap.Map(Cosmos.Dapper.EntityMapping.DapperClassBuilder)">
            <summary>
            Map
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Cosmos.Dapper.Core.SqlKata.ISqlKataCompilerCreator">
            <summary>
            Interface for SqlKata compiler creator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Core.SqlKata.ISqlKataCompilerCreator.Create">
            <summary>
            Create
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Core.SqlKata.SqlKataCompilerCreator`1">
            <summary>
            SqlKata compiler creator
            </summary>
            <typeparam name="TCompiler"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Core.SqlKata.SqlKataCompilerCreator`1.Create">
            <summary>
            Create
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.DapperConfig">
            <summary>
            Dapper config
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.#ctor(Cosmos.Data.Statements.ISQLDialect,Cosmos.Dapper.Core.SqlKata.ISqlKataCompilerCreator,Cosmos.Dapper.DapperOptions,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperConfig" />
            </summary>
            <param name="sqlDialect"></param>
            <param name="compilerCreator"></param>
            <param name="options"></param>
            <param name="strict"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.#ctor(System.Type,System.Collections.Generic.IList{System.Reflection.Assembly},Cosmos.Data.Statements.ISQLDialect,Cosmos.Dapper.Core.SqlKata.ISqlKataCompilerCreator,Cosmos.Dapper.DapperOptions,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperConfig" />
            </summary>
            <param name="defaultMapper"></param>
            <param name="mappingAssemblies"></param>
            <param name="sqlDialect"></param>
            <param name="compilerCreator"></param>
            <param name="options"></param>
            <param name="strict"></param>
        </member>
        <member name="P:Cosmos.Dapper.DapperConfig.ClassMappers">
            <summary>
            Gets class mappers
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConfig.DefaultMapper">
            <summary>
            Gets default mapper
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConfig.MappingAssemblies">
            <summary>
            Gets mapping assemblies
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConfig.Dialect">
            <summary>
            Gets dialect
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetMap(System.Type)">
            <summary>
            Get map by given entity type
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetMap``1">
            <summary>
            Get map by given entity type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetInternalMap(System.Type)">
            <summary>
            Gets internal map
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetInternalMap``1">
            <summary>
            Gets internal map
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetMapType(System.Type,System.Boolean)">
            <summary>
            Gets map type
            </summary>
            <param name="entityType"></param>
            <param name="fluentMapMode"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.SetMap(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Sets map
            </summary>
            <param name="classMap"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetCompiler">
            <summary>
            Sets compiler
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.ClearCache">
            <summary>
            Clear cache
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperConfig.GetNextGuid">
            <summary>
            Gets next guid
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.DapperConfig.IsStrictMode">
            <summary>
            Is strict mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConfig.Options">
            <summary>
            Gets options
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.FluentMapConfiguration">
            <summary>
            Fluent map configuretion
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.FluentMapConfiguration.#ctor(Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.FluentMapConfiguration" />
            </summary>
            <param name="mappingConfig"></param>
        </member>
        <member name="M:Cosmos.Dapper.FluentMapConfiguration.AddMap``1(Cosmos.Dapper.Mapper.ClassMap{``0})">
            <summary>
            Add map
            </summary>
            <param name="classMap"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.FluentMapConfiguration.AddConvention``1(System.Action{Cosmos.Dapper.FluentMap.FluentConventionConfiguration})">
            <summary>
            Add convention
            </summary>
            <param name="configureConvention"></param>
            <typeparam name="TConvention"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.FluentMapConfiguration.ConfigureOptions(System.Action{Cosmos.Dapper.DapperOptions})">
            <summary>
            Configure operations
            </summary>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.DapperContext`2">
            <summary>
            Dapper context
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TConnection"></typeparam>
            <summary>
            Dapper context
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.#ctor(`1,Cosmos.Dapper.Core.IDapperContextParams)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperContext`2" />
            </summary>
            <param name="connection"></param>
            <param name="params"></param>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.SafeConnectionString">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.OriginalConnectionString">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.Transaction">
            <summary>
            Gets transation
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Commit">
            <summary>
            Commit
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Commit(System.Action)">
            <summary>
            Commit
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Rollback">
            <summary>
            Rollback
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.QueryOperators">
            <summary>
            Gets query operators
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.CommandOperators">
            <summary>
            Gets command operators
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.EntityOperators">
            <summary>
            Gets entity operators
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.BulkInsertOperators">
            <summary>
            Gets bulk insert operators
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.DapperSetLazy``1(System.String)">
            <summary>
            Gets lazy DapperSet
            </summary>
            <param name="bindingPropertyName"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetActionEntry(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets DapperAction entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetActionEntry``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets DapperAction entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetAsynchronousActionEntry(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets asynchronous DapperAction entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetAsynchronousActionEntry``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets asynchronous DapperAction entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetSqlKataQueryBuilder">
            <summary>
            Gets SqlKata QueryBuilder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetSqlKataEntityQueryBuilder">
            <summary>
            Gets SqlKata Entity QueryBuilder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.GetSqlKataMultipleQueryBuilder">
            <summary>
            Gets SqlKata Multiple QueryBuilder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.SqlKataQueryBuilderFunc">
            <summary>
            Gets function for SqlKata Query Builder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.OnContextCreatingScoped">
            <summary>
            On context creating scoped
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.OnModelCreating(Cosmos.Dapper.EntityMapping.DapperClassBuilder)">
            <summary>
            On model creating
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.EntityMapType">
            <summary>
            Gets type of entity map
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperContext`2.MappingConfig">
            <summary>
            Gets mapping config
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query(System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of object by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query(System.Type,System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of object by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``1(System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of object by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``1(System.String,System.Type[],System.Func{System.Object[],``0},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``1(System.String,System.Type[],System.Func{System.Object[],``0},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``2(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``3(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``4(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``5(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``6(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``7(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``2(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``3(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``4(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``5(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``6(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``7(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``3(System.String,System.Func{``0,``1,``2},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``4(System.String,System.Func{``0,``1,``2,``3},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``5(System.String,System.Func{``0,``1,``2,``3,``4},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``3(System.String,System.Func{``0,``1,``2},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``4(System.String,System.Func{``0,``1,``2,``3},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``5(System.String,System.Func{``0,``1,``2,``3,``4},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query(Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``1(Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync(Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query a collection object by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query a collection entity by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``2(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``3(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``4(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``5(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``6(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``7(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``2(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``3(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``4(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``5(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``6(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``7(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``3(Dapper.CommandDefinition,System.Func{``0,``1,``2},System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``4(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3},System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``5(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4},System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``6(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5},System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``7(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6},System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.Query``8(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``3(Dapper.CommandDefinition,System.Func{``0,``1,``2},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``4(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``5(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``6(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``7(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryAsync``8(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirst(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirst(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirst``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirst(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirst(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirst``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstAsync(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefault(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefault(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefault``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefaultAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefaultAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefault(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefault(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object or default by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefault``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefaultAsync(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefaultAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object or default by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryFirstOrDefaultAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingle(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingle(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingle``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingle(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingle(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingle``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleAsync(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefault(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefault(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefault``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefaultAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql and type async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefaultAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefault(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefault(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object or default by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefault``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefaultAsync(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefaultAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object or default by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QuerySingleOrDefaultAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryMultiple(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple grid reader by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryMultipleAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple guild reader by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryMultiple(Dapper.CommandDefinition)">
            <summary>
            Query multiple grid reader by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperContext`2.QueryMultipleAsync(Dapper.CommandDefinition)">
            <summary>
            Query multiple guild reader by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.DapperException">
            <summary>
            Dapper exception
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.DapperException.DEFAULT_DBCTX_FLAG">
            <summary>
            Defalt db ctx flag
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.DapperException.DEFAULT_DBCTX_ERROR_MESSAGE">
            <summary>
            Default db ctx error message
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.DapperException.DEFAULT_DBCTX_ERROR_CODE">
            <summary>
            Default db ctx error code
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Int64,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Int64,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Data.IDbConnection)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Data.IDbConnection,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="connection"></param>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Data.IDbConnection,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="connection"></param>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Data.IDbConnection,System.Int64,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="connection"></param>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperException.#ctor(System.Data.IDbConnection,System.Int64,System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.DapperException" />
            </summary>
            <param name="connection"></param>
            <param name="errorCode"></param>
            <param name="errorMessage"></param>
            <param name="flag"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:Cosmos.Dapper.DapperException.Database">
            <summary>
            Gets database
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperException.ConnectionString">
            <summary>
            Gets connection string
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperException.ConnectionState">
            <summary>
            Gets connection state
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.DapperConf">
            <summary>
            Dapper configuration from user
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConf.ConnectionString">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConf.ConnectionPoolMode">
            <summary>
            Using connection pool mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConf.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConf.BatchSize">
            <summary>
            Batch size
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperConf.SecureFilePriv">
            <summary>
            Secure fle priv
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.DapperOptions">
            <summary>
            Dapper options
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperOptions.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperOptions.ConnectionString">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperOptions.ConnectionPoolMode">
            <summary>
            Using connection pool mode
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperOptions.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperOptions.BatchSize">
            <summary>
            Batch size
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperOptions.SecureFilePriv">
            <summary>
            Secure fle priv
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptions.MergeOptionsFrom(Cosmos.Dapper.DapperOptions)">
            <summary>
            Merge options from...
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptions.MergeOptionsFrom(Cosmos.Dapper.DapperConf)">
            <summary>
            Merge options from...
            </summary>
            <param name="conf"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptions.Create(System.String,System.String)">
            <summary>
            Create Dapper options
            </summary>
            <param name="name"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptions.Create(System.Action{Cosmos.Dapper.DapperOptions})">
            <summary>
            Create Dapper options
            </summary>
            <param name="optionAct"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptions.Create``1(System.String,System.String)">
            <summary>
            Create Dapper options
            </summary>
            <param name="name"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptions.Create``1(System.Action{Cosmos.Dapper.DapperOptions{``0}})">
            <summary>
            Create Dapper options
            </summary>
            <param name="optionAct"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.DapperOptions`1">
            <summary>
            Dapper options
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="T:Cosmos.Dapper.DapperOptionsExtensions">
            <summary>
            Extensions for dapper options
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptionsExtensions.MarkFor``1(Cosmos.Dapper.DapperConf,System.String)">
            <summary>
            Mark for context
            </summary>
            <param name="originalOptions"></param>
            <param name="name"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptionsExtensions.Mark(Cosmos.Dapper.DapperConf,System.String)">
            <summary>
            Mark
            </summary>
            <param name="originalOptions"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.DapperOptionsAccessor">
            <summary>
            Dapper options accessor
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptionsAccessor.Get(System.String)">
            <summary>
            Gets dapper options by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptionsAccessor.Get``1">
            <summary>
            Gets dapper options by type
            </summary>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperOptionsAccessor.Get``1(System.String)">
            <summary>
            Gets dapper options by type and name
            </summary>
            <param name="name"></param>
            <typeparam name="TContext"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.DapperPredicates">
            <summary>
            Dapper predicates
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.DapperPredicates.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Cosmos.Data.Statements.SQLOperatorSlim,System.Object,System.Boolean)">
            <summary>
            Field...
            </summary>
            <param name="expression"></param>
            <param name="op"></param>
            <param name="value"></param>
            <param name="not"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.DapperPredicates.Property``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Cosmos.Data.Statements.SQLOperatorSlim,System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Boolean)">
            <summary>
            Property...
            </summary>
            <param name="expression1"></param>
            <param name="op"></param>
            <param name="expression2"></param>
            <param name="not"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEntity2"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.DapperPredicates.Group(Cosmos.Data.Statements.SQLGroupOperator,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Group...
            </summary>
            <param name="op"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperPredicates.Exists``1(Cosmos.Data.Statements.ISQLPredicate,System.Boolean)">
            <summary>
            Exists...
            </summary>
            <param name="predicate"></param>
            <param name="not"></param>
            <typeparam name="TSub"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperPredicates.Between``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Cosmos.Data.Statements.SQLBetweenValues,System.Boolean)">
            <summary>
            Between...
            </summary>
            <param name="expression"></param>
            <param name="values"></param>
            <param name="not"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.DapperPredicates.Sort``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean)">
            <summary>
            Sort...
            </summary>
            <param name="expression"></param>
            <param name="ascending"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Cosmos.Dapper.DapperSet">
            <summary>
            Dapper set
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.DapperSet.RepoLevelDataFilter">
            <summary>
            Repository level data filter
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.DapperSet`1">
            <summary>
            Dapper set
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Add yasnc
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add range
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Add range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Update(`0)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update range
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.UpdateRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Update range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.DeleteRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Delete range
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.DeleteRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Delete range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Delete(Cosmos.Data.Statements.ISQLPredicate)">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.DeleteAsync(Cosmos.Data.Statements.ISQLPredicate,System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Delete(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Delete by given condition
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.DeleteAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Delete by given condition async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindById(System.Object)">
            <summary>
            Find an entity by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Find an entity by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Single(System.String)">
            <summary>
            Find single entity by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleOrDefault(System.String)">
            <summary>
            Find single entity or default by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleOrDefaultAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.First(System.String)">
            <summary>
            Find first entity by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstOrDefault(System.String)">
            <summary>
            Find first entity or default by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstOrDefaultAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindList(System.String)">
            <summary>
            Find a list of entity by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindListAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find a list of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.First(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given sqlkata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given sqlkata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given sqlkata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given sqlkata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Single(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given sqlkata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given sqlkata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given sqlkata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given sqlkata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindList(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a list of entity by given sqlkata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindListAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a list of entity by given sqlkata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find single entity by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find single entity or default by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.SingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find first entity by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find first entity or default by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindList(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find a lst of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find a lst of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindListAsync(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a lst of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.FindListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a lst of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Count(Cosmos.Data.Statements.ISQLPredicate)">
            <summary>
            Gets count by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets count by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.CountAsync(Cosmos.Data.Statements.ISQLPredicate,System.Threading.CancellationToken)">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Count(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Gets count by given condition
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.CountAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.DapperSet`1.Where(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Query, and return a SqlKata QueryBuilder instance
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.ColumnAttribute">
            <summary>
            Column attribute
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.ColumnAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.EntityMapping.ColumnAttribute" />
            </summary>
            <param name="name"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.ColumnAttribute.Name">
            <summary>
            Gets name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.ColumnAttribute.CaseSensitive">
            <summary>
            Gets case sensitive
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.DapperClassBuilder">
            <summary>
            Dapper class builder
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperClassBuilder.#ctor(Cosmos.Dapper.DapperConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.EntityMapping.DapperClassBuilder" />
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperClassBuilder.Entity``1">
            <summary>
            Entity..
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1">
            <summary>
            Dapper entity type builder
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1.#ctor(Cosmos.Dapper.DapperConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1" />
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1.ClassMapper">
            <summary>
            Class mapper
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1.ToSchema(System.String)">
            <summary>
            Tp schema
            </summary>
            <param name="schemaName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1.ToTable(System.String)">
            <summary>
            To table name
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder`1.ForProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            For property
            </summary>
            <param name="expression"></param>
            <typeparam name="TProperty"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.DapperMapBase`1">
            <summary>
            Dapper map base
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.DapperMapBase`1.ClassBuilder">
            <summary>
            Class builder
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperMapBase`1.Map(Cosmos.Dapper.EntityMapping.DapperClassBuilder)">
            <summary>
            Map
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperMapBase`1.MapTable(Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder{`0})">
            <summary>
            映射表
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperMapBase`1.MapProperties(Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder{`0})">
            <summary>
            映射属性
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperMapBase`1.MapAssociations(Cosmos.Dapper.EntityMapping.DapperEntityTypeBuilder{`0})">
            <summary>
            映射导航属性
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.DapperMapBase`1.HasQueryFilter">
            <summary>
            To configure global data filtering strategy for such entity
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.IgnoreConventionAttribute">
            <summary>
            Ignore convention attribute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.IgnoreMapAttribute">
            <summary>
            Ignore map attribute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.PrimaryKeyAttribute">
            <summary>
            Primary key attribute
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.PrimaryKeyAttribute.#ctor(Cosmos.Dapper.Mapper.KeyType)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.EntityMapping.PrimaryKeyAttribute" />
            </summary>
            <param name="keyType"></param>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.PrimaryKeyAttribute.KeyType">
            <summary>
            Key type
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.ReadOnlyAttribute">
            <summary>
            Readonly attribute
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.SchemaAttribute">
            <summary>
            Schema attribute
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.SchemaAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.EntityMapping.SchemaAttribute" />
            </summary>
            <param name="name"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.SchemaAttribute.Name">
            <summary>
            Gets name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.SchemaAttribute.CaseSensitive">
            <summary>
            Gets sensitive
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.EntityMapping.TableAttribute">
            <summary>
            Table attribute
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.EntityMapping.TableAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.EntityMapping.TableAttribute" />
            </summary>
            <param name="name"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.TableAttribute.Name">
            <summary>
            Gets name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.EntityMapping.TableAttribute.CaseSensitive">
            <summary>
            Gets case sensitive
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.MultiQueryExtensions">
            <summary>
            Extensions for multi query
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.Query``2(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.Query``3(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.Query``4(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.Query``5(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.Query``6(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.Query``7(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.QueryAsync``2(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.QueryAsync``3(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.QueryAsync``4(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.QueryAsync``5(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.QueryAsync``6(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiQueryExtensions.QueryAsync``7(System.Data.IDbConnection,System.String,System.Object,System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="connection"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.MultiGridReaderExtensions">
            <summary>
            Extensions for multi grid reader 
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.MultiGridReaderExtensions.Read``2(Dapper.SqlMapper.GridReader,System.String,System.Boolean)">
            <summary>
            Read
            </summary>
            <param name="gridReader"></param>
            <param name="splitOn"></param>
            <param name="buffered"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiGridReaderExtensions.Read``3(Dapper.SqlMapper.GridReader,System.String,System.Boolean)">
            <summary>
            Read
            </summary>
            <param name="gridReader"></param>
            <param name="splitOn"></param>
            <param name="buffered"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiGridReaderExtensions.Read``4(Dapper.SqlMapper.GridReader,System.String,System.Boolean)">
            <summary>
            Read
            </summary>
            <param name="gridReader"></param>
            <param name="splitOn"></param>
            <param name="buffered"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiGridReaderExtensions.Read``5(Dapper.SqlMapper.GridReader,System.String,System.Boolean)">
            <summary>
            Read
            </summary>
            <param name="gridReader"></param>
            <param name="splitOn"></param>
            <param name="buffered"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiGridReaderExtensions.Read``6(Dapper.SqlMapper.GridReader,System.String,System.Boolean)">
            <summary>
            Read
            </summary>
            <param name="gridReader"></param>
            <param name="splitOn"></param>
            <param name="buffered"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.MultiGridReaderExtensions.Read``7(Dapper.SqlMapper.GridReader,System.String,System.Boolean)">
            <summary>
            Read
            </summary>
            <param name="gridReader"></param>
            <param name="splitOn"></param>
            <param name="buffered"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.FluentMap.FluentConventionConfiguration">
            <summary>
            Fluent convention configuration
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.FluentMap.FluentConventionConfiguration.#ctor(Cosmos.Dapper.Conventions.ConventionBase,Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.FluentMap.FluentConventionConfiguration" />
            </summary>
            <param name="convention"></param>
            <param name="mappingConfig"></param>
        </member>
        <member name="M:Cosmos.Dapper.FluentMap.FluentConventionConfiguration.ForEntity``1">
            <summary>
            For entity...
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.FluentMap.FluentConventionConfiguration.ForEntitiesInCurrentAssembly(System.String[])">
            <summary>
            For entity in current assembly...
            </summary>
            <param name="namespaces"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.FluentMap.FluentConventionConfiguration.ForEntitiesInAssembly(System.Reflection.Assembly,System.String[])">
            <summary>
            For entity in assembly...
            </summary>
            <param name="assembly"></param>
            <param name="namespaces"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.IClassMapGetter">
            <summary>
            Interface for class map getter
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IClassMapGetter.ClassMappers">
            <summary>
            Class mappers
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.IClassMapGetter.GetMap(System.Type)">
            <summary>
            Get map for given entity type
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.IDapperContext">
            <summary>
            Interface for dapper context
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.SafeConnectionString">
            <summary>
            Gets safe connection string
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.OriginalConnectionString">
            <summary>
            Gets original connection string
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.Transaction">
            <summary>
            Gets current transaction
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.QueryOperators">
            <summary>
            Query operators
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.CommandOperators">
            <summary>
            Command operators
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.EntityOperators">
            <summary>
            Entity operators
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperContext.BulkInsertOperators">
            <summary>
            Bulk insert operators
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetActionEntry(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets action entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetActionEntry``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets action entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetAsynchronousActionEntry(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets asynchronous action entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetAsynchronousActionEntry``1(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets asynchronous action entry
            </summary>
            <param name="dataFilterPredicates"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetSqlKataQueryBuilder">
            <summary>
            Gets sql-kata query builder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetSqlKataEntityQueryBuilder">
            <summary>
            Gets sql-kata entity query builder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.GetSqlKataMultipleQueryBuilder">
            <summary>
            Gets sql-kata multiple query builder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.SqlKataQueryBuilderFunc">
            <summary>
            Gets sql-kata query builder function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperContext.DapperSetLazy``1(System.String)">
            <summary>
            Dapper set lazy
            </summary>
            <param name="bindingPropertyName"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.IDapperMappingConfig">
            <summary>
            Interface for dapper mapping config
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperMappingConfig.DefaultMapper">
            <summary>
            Type of default mapper
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperMappingConfig.MappingAssemblies">
            <summary>
            Mapping assemblies
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.IDapperMappingConfig.Dialect">
            <summary>
            Dialect
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.IDapperMappingConfig.GetMap(System.Type)">
            <summary>
            Gets map for given entity type
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperMappingConfig.GetMap``1">
            <summary>
            Get map for given entity type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperMappingConfig.ClearCache">
            <summary>
            Clear cache
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.IDapperMappingConfig.GetNextGuid">
            <summary>
            Get next guid
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.IDapperMappingConfig.Options">
            <summary>
            Opetions
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.IFluentDapperMappingConfig">
            <summary>
            Interface for fluent dapper mapping config
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.IFluentDapperMappingConfig.AddMap``1(Cosmos.Dapper.Mapper.ClassMap{``0})">
            <summary>
            Add map
            </summary>
            <param name="classMap"></param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IFluentDapperMappingConfig.AddConvention``1(System.Action{Cosmos.Dapper.FluentMap.FluentConventionConfiguration})">
            <summary>
            Add convention
            </summary>
            <param name="configureConvention"></param>
            <typeparam name="TConvention"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IFluentDapperMappingConfig.ConfigureOptions(System.Action{Cosmos.Dapper.DapperOptions})">
            <summary>
            Configure options
            </summary>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.IInternalDapperMappingConfig">
            <summary>
            Interface for internal dapper mapping config
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.IDapperSet">
            <summary>
            Interface for DapperSet
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.IDapperSet`1">
            <summary>
            Interface for DapperSet
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Add async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add range
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Add range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Update(`0)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update range
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.UpdateRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Update range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.DeleteRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Delete range
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.DeleteRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Delete range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Delete(Cosmos.Data.Statements.ISQLPredicate)">
            <summary>
            Delete
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.DeleteAsync(Cosmos.Data.Statements.ISQLPredicate,System.Threading.CancellationToken)">
            <summary>
            Delete async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.DeleteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Delete(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Delete by given condition
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.DeleteAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Delete by given condition async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindById(System.Object)">
            <summary>
            Find an entity by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Find an entity by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Single(System.String)">
            <summary>
            Find single entity by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleOrDefault(System.String)">
            <summary>
            Find single entity or default by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleOrDefaultAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.First(System.String)">
            <summary>
            Find first entity by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstOrDefault(System.String)">
            <summary>
            Find first entity or default by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstOrDefaultAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find single entity by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find single entity or default by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find first entity by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find first entity or default by given predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given predicate async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindList(System.String)">
            <summary>
            Find a list of entity by given sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindListAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Find a list of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindList(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Find a lst of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindListAsync(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a lst of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.First(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FirstOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Single(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.SingleOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindList(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a list of entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.FindListAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a list of entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Count(Cosmos.Data.Statements.ISQLPredicate)">
            <summary>
            Gets count by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets count by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Count(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Gets count by given condition
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.CountAsync(Cosmos.Data.Statements.ISQLPredicate,System.Threading.CancellationToken)">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.CountAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.IDapperSet`1.Where(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Query, and return a SqlKata QueryBuilder instance
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.IMultipleResultReader">
            <summary>
            Interface for Multiple result reader
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.IMultipleResultReader.Read``1">
            <summary>
            Read
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.AutoClassMap`1">
            <summary>
            Auto class map
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.AutoClassMap`1.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Mapper.AutoClassMap`1" />
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.PluralizedAutoClassMap`1">
            <summary>
            Pluralized auto class map
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PluralizedAutoClassMap`1.Table(System.String,System.Boolean)">
            <summary>
            Sets table name
            </summary>
            <param name="tableName"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.PluralizedAutoClassMap`1.Formatting">
            <summary>
            Formatting
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PluralizedAutoClassMap`1.Formatting.Pluralize(System.String)">
            <summary>
            Pluralize
            </summary>
            <param name="singular"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.ClassMap`1">
            <summary>
            Class map
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Mapper.ClassMap`1" />
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.SchemaName">
            <summary>
            Schema name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.SchemaNameCaseSensitive">
            <summary>
            Schema name case sensitive
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.TableName">
            <summary>
            Table name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.TableNameCaseSensitive">
            <summary>
            Table name case sensitive
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.PropertyMaps">
            <summary>
            Property maps
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.EntityType">
            <summary>
            Gets entity type
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.PropertyTypeKeyTypeMapping">
            <summary>
            Property type key type mapping
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.Schema(System.String,System.Boolean)">
            <summary>
            Sets schema
            </summary>
            <param name="schemaName"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.Table(System.String,System.Boolean)">
            <summary>
            Sets table name
            </summary>
            <param name="tableName"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.AutoMap">
            <summary>
            Auto map
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.AutoMap(System.Func{System.Type,System.Reflection.PropertyInfo,System.Boolean})">
            <summary>
            Auto map
            </summary>
            <param name="canMap"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.GetPropertyMap(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Gets property map
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.GetPropertyMap(System.Reflection.PropertyInfo)">
            <summary>
            Gets property map
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.RemovePropertyMap(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Remove property map
            </summary>
            <param name="expression"></param>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.BeforeSaveAction">
            <summary>
            Before save active
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.ClassMap`1.AfterSaveAction">
            <summary>
            After save action
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.BeforeSave(`0)">
            <summary>
            Before save
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.AfterSave(`0)">
            <summary>
            After save
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.InternalGetPropertyMap(System.Reflection.PropertyInfo)">
            <summary>
            Internal get property map
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.InternalSchema(System.String,System.Boolean)">
            <summary>
            Internal schema
            </summary>
            <param name="schemaName"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.ClassMap`1.InternalTable(System.String,System.Boolean)">
            <summary>
            Internal table
            </summary>
            <param name="tableName"></param>
            <param name="caseSensitive"></param>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.ClassMapperHelper">
            <summary>
            Class mapper helper
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.IClassMap">
            <summary>
            Interface for class map
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IClassMap.SchemaName">
            <summary>
            Schema name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IClassMap.TableName">
            <summary>
            Table name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IClassMap.PropertyMaps">
            <summary>
            Property maps
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IClassMap.EntityType">
            <summary>
            Entity type
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.IClassMap`1">
            <summary>
            Interface for class map
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.IClassMap`1.BeforeSave(`0)">
            <summary>
            Before save
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.IClassMap`1.AfterSave(`0)">
            <summary>
            After save
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.IPropertyMap">
            <summary>
            Interface for property map
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.ColumnName">
            <summary>
            Column name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.Ignored">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.IsReadOnly">
            <summary>
            Is readonly
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.IsCaseSensitive">
            <summary>
            Is case sensitive
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.KeyType">
            <summary>
            Key type
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.IPropertyMap.PropertyInfo">
            <summary>
            Property info
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.KeyType">
            <summary>
            Key type
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Mapper.KeyType.NotAKey">
            <summary>
            The property is not a key and is not automatically managed.
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Mapper.KeyType.Identity">
            <summary>
            The property is an integery-based identity generated from the database.
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Mapper.KeyType.TriggerIdentity">
            <summary>
            The property is an identity generated by the database trigger.
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Mapper.KeyType.Guid">
            <summary>
            The property is a Guid identity which is automatically managed.
            </summary>
        </member>
        <member name="F:Cosmos.Dapper.Mapper.KeyType.Assigned">
            <summary>
            The property is a key that is not automatically managed.
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.PropertyMap">
            <summary>
            Property map
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Mapper.PropertyMap" />
            </summary>
            <param name="property"></param>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.Name">
            <summary>
            Name of property
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.ColumnName">
            <summary>
            Column name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.Ignored">
            <summary>
            Ignored
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.IsIgnoreConvention">
            <summary>
            Is ignore convertion
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.IsReadOnly">
            <summary>
            Is readonly
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.IsCaseSensitive">
            <summary>
            Is case sensitive
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.KeyType">
            <summary>
            Key type
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Mapper.PropertyMap.PropertyInfo">
            <summary>
            Property info
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.ToColumn(System.String,System.Boolean)">
            <summary>
            To column
            </summary>
            <param name="columnName"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.PrimaryKey(Cosmos.Dapper.Mapper.KeyType)">
            <summary>
            Primary key
            </summary>
            <param name="type"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.Ignore">
            <summary>
            Ignore
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.IgnoreConvention">
            <summary>
            Ignore convention
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.ReadOnly">
            <summary>
            Readonly
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.CaseSensitive">
            <summary>
            Case sensitive
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Mapper.PropertyMap.CaseInsensitive">
            <summary>
            Case insensitive
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Mapper.PropertyMapperHelper">
            <summary>
            Property mapper helper
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.GridReaderResultReader">
            <summary>
            Grid reader result reader
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.GridReaderResultReader.#ctor(Dapper.SqlMapper.GridReader)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.GridReaderResultReader" />
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Cosmos.Dapper.GridReaderResultReader.Read``1">
            <summary>
            Read
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.SequenceReaderResultReader">
            <summary>
            Sequence reader result reader
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SequenceReaderResultReader.#ctor(System.Collections.Generic.IEnumerable{Dapper.SqlMapper.GridReader})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.SequenceReaderResultReader" />
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Cosmos.Dapper.SequenceReaderResultReader.Read``1">
            <summary>
            Read
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.DapperBulkInsertOperator">
            <summary>
            Dapper bulk insert operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.#ctor(Cosmos.Dapper.Core.IDapperConnector)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Operations.DapperBulkInsertOperator" />
            </summary>
            <param name="connector"></param>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.Process``1(System.Collections.Generic.IList{``0})">
            <summary>
            Process
            </summary>
            <param name="dataSet"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.ProcessAsync``1(System.Collections.Generic.IList{``0})">
            <summary>
            Process async
            </summary>
            <param name="dataSet"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.GetMap``1">
            <summary>
            Gets map
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.GetTableName``1">
            <summary>
            Gets table name
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.QuoteString(System.String)">
            <summary>
            Quote string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.GetConnection``1">
            <summary>
            Gets connection
            </summary>
            <typeparam name="TConnection"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.Operations.DapperBulkInsertOperator.Options">
            <summary>
            Gets mapping config options
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Operations.DapperBulkInsertOperator.DataTableBuilder">
            <summary>
            DataTable Builder...
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperBulkInsertOperator.DataTableBuilder.Build``1(Cosmos.Dapper.Mapper.IClassMap{``0},System.Collections.Generic.IList{``0},System.String)">
            <summary>
            Build
            </summary>
            <param name="classMap"></param>
            <param name="dataSet"></param>
            <param name="tableName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.DapperCommandOperator">
            <summary>
            Dapper command operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.Execute(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.Execute(Dapper.CommandDefinition)">
            <summary>
            Execute
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalar(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalar``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalar(Dapper.CommandDefinition)">
            <summary>
            Execute scalar
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalar``1(Dapper.CommandDefinition)">
            <summary>
            Execute scalar
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteReader(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute reader
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteReader(Dapper.CommandDefinition)">
            <summary>
            Execute reader
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteReader(Dapper.CommandDefinition,System.Data.CommandBehavior)">
            <summary>
            Execute reader
            </summary>
            <param name="command"></param>
            <param name="commandBehavior"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalarAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalarAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalarAsync(Dapper.CommandDefinition)">
            <summary>
            Execute scalar async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteScalarAsync``1(Dapper.CommandDefinition)">
            <summary>
            Execute scalar async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteAsync(Dapper.CommandDefinition)">
            <summary>
            Execute async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteReaderAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute reader async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperCommandOperator.ExecuteReaderAsync(Dapper.CommandDefinition)">
            <summary>
            Execute reader async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.DapperQueryOperator">
            <summary>
            Dapper query operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query(System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query(System.Type,System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``1(System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query(Dapper.CommandDefinition)">
            <summary>
            Query
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``1(Dapper.CommandDefinition)">
            <summary>
            Query
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``3(System.String,System.Func{``0,``1,``2},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``4(System.String,System.Func{``0,``1,``2,``3},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``5(System.String,System.Func{``0,``1,``2,``3,``4},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``1(System.String,System.Type[],System.Func{System.Object[],``0},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``3(Dapper.CommandDefinition,System.Func{``0,``1,``2},System.String)">
            <summary>
            Query 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``4(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3},System.String)">
            <summary>
            Query 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``5(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4},System.String)">
            <summary>
            Query 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``6(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5},System.String)">
            <summary>
            Query 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``7(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6},System.String)">
            <summary>
            Query 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``8(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.String)">
            <summary>
            Query 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``2(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``3(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``4(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``5(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``6(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``7(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``2(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``3(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``4(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``5(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``6(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.Query``7(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirst(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefault(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingle(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefault(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirst``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefault``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingle``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefault``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirst(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefault(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingle(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefault(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirst(Dapper.CommandDefinition)">
            <summary>
            Query first
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefault(Dapper.CommandDefinition)">
            <summary>
            Query first or default
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingle(Dapper.CommandDefinition)">
            <summary>
            Query single
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefault(Dapper.CommandDefinition)">
            <summary>
            Query single or default
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirst``1(Dapper.CommandDefinition)">
            <summary>
            Query first
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefault``1(Dapper.CommandDefinition)">
            <summary>
            Query first or default
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingle``1(Dapper.CommandDefinition)">
            <summary>
            Query single
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefault``1(Dapper.CommandDefinition)">
            <summary>
            Query single or default
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirst(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefault(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first or default
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingle(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefault(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single or default
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryMultiple(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryMultiple(Dapper.CommandDefinition)">
            <summary>
            Query multiple
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync(Dapper.CommandDefinition)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``3(System.String,System.Func{``0,``1,``2},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``4(System.String,System.Func{``0,``1,``2,``3},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``5(System.String,System.Func{``0,``1,``2,``3,``4},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``1(System.String,System.Type[],System.Func{System.Object[],``0},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``3(Dapper.CommandDefinition,System.Func{``0,``1,``2},System.String)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``4(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3},System.String)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``5(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4},System.String)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``6(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5},System.String)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``7(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6},System.String)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``8(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.String)">
            <summary>
            Query async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``2(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``3(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``4(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``5(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``6(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``7(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``2(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``3(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``4(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``5(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``6(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryAsync``7(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstAsync(Dapper.CommandDefinition)">
            <summary>
            Query first async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefaultAsync(Dapper.CommandDefinition)">
            <summary>
            Query first or default async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleAsync(Dapper.CommandDefinition)">
            <summary>
            Query single async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefaultAsync(Dapper.CommandDefinition)">
            <summary>
            Query single or default async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query first async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefaultAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query first or default async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query single async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefaultAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query single or default async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefaultAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefaultAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefaultAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefaultAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryFirstOrDefaultAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first or default async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QuerySingleOrDefaultAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single or default async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryMultipleAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.DapperQueryOperator.QueryMultipleAsync(Dapper.CommandDefinition)">
            <summary>
            Query multiple
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.IDapperBulkInsertOperator">
            <summary>
            Interface for dapper bulk insert operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperBulkInsertOperator.Process``1(System.Collections.Generic.IList{``0})">
            <summary>
            Process
            </summary>
            <param name="dataSet"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperBulkInsertOperator.ProcessAsync``1(System.Collections.Generic.IList{``0})">
            <summary>
            Process async
            </summary>
            <param name="dataSet"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.IDapperCommandOperator">
            <summary>
            Interface for Dapper Command Operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalarAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalarAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalarAsync(Dapper.CommandDefinition)">
            <summary>
            Execute scalar async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalarAsync``1(Dapper.CommandDefinition)">
            <summary>
            Execute scalar async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteAsync(Dapper.CommandDefinition)">
            <summary>
            Execute async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteReaderAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute reader async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteReaderAsync(Dapper.CommandDefinition)">
            <summary>
            Execute reader async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.Execute(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.Execute(Dapper.CommandDefinition)">
            <summary>
            Execute
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalar(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalar``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute scalar
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalar(Dapper.CommandDefinition)">
            <summary>
            Execute scalar
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteScalar``1(Dapper.CommandDefinition)">
            <summary>
            Execute scalar
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteReader(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute reader
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteReader(Dapper.CommandDefinition)">
            <summary>
            Execute reader
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperCommandOperator.ExecuteReader(Dapper.CommandDefinition,System.Data.CommandBehavior)">
            <summary>
            Execute reader
            </summary>
            <param name="command"></param>
            <param name="commandBehavior"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.IDapperEntityOperator">
            <summary>
            Interface for Dapper entity operator
            </summary>
            <summary>
            Interface for Dapper Entity Operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.RunInTransaction``1(System.Func{``0})">
            <summary>
            RUn in transaction
            </summary>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Get``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            get entity by given id
            </summary>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetAsync``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            get entity by given id async
            </summary>
            <param name="id"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Get``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            get entity by given id
            </summary>
            <param name="id"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetAsync``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            get entity by given id async
            </summary>
            <param name="id"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Insert``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction)">
            <summary>
            Insert a collection of entity
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.InsertAsync``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert a collection of entity async
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Insert a collection of entity
            </summary>
            <param name="entities"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.InsertAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Insert a collection of entity async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Insert``1(``0,System.Data.IDbTransaction)">
            <summary>
            Insert an entity
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.InsertAsync``1(``0,System.Data.IDbTransaction,System.Threading.CancellationToken)">
            <summary>
            Insert an entity async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Insert``1(``0)">
            <summary>
            Insert an entity
            </summary>
            <param name="entity"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.InsertAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Insert an entity async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Update``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update an entity
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.UpdateAsync``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update an entity async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Update``1(``0,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update an entity 
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.UpdateAsync``1(``0,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update an entity async
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Update``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update a collection of entity
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.UpdateAsync``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update a collection of entity async
            </summary>
            <param name="entities"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Update``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Update a collection of entity
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.UpdateAsync``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Update a collection of entity async
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete an entity
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(``0,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete an entity async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(``0,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete an entity
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(``0,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete an entity async
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete a collection of entity
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(System.Collections.Generic.IEnumerable{``0},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete a collection of entity async
            </summary>
            <param name="entity"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete a collection of entity
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(System.Collections.Generic.IEnumerable{``0},Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete a collection of entity async
            </summary>
            <param name="entity"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOne``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Gets one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOneAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Gets one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOne``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Gets one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOneAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Gets one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets First entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets First entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets First entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets First entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets First entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets First entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets First entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets First entity or default by given condition asunc
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetListAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetList``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetListAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPageAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSet``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a set of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSetAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a set of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSet``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a set of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSetAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a set of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets count by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets count by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets count by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Delete``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Delete entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.DeleteAsync``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Delete entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOne``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOneAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOne``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean,Cosmos.Dapper.Core.DapperImplementor.QueryOneType)">
            <summary>
            Get one entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetOneAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],Cosmos.Dapper.Core.DapperImplementor.QueryOneType,System.Threading.CancellationToken)">
            <summary>
            Get one entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="type"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.First``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.First``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.FirstOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Single``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Single``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefault``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.SingleOrDefaultAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sortSet"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetList``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetListAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetList``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetListAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPage``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPageAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPage``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetPageAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSet``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a set of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSetAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a set of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSet``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Boolean)">
            <summary>
            Gets a set of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="buffered"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.GetSetAsync``1(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets a set of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Count``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets count of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.CountAsync``1(System.Object,System.Data.IDbTransaction,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets count of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="transaction"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.Count``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Gets count of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperEntityOperator.CountAsync``1(System.Object,Cosmos.Data.Statements.ISQLPredicate[],System.Threading.CancellationToken)">
            <summary>
            Gets count of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="filters"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Operations.IDapperQueryOperator">
            <summary>
            Interface for Dapper Query Operator
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query(System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of object by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query(System.Type,System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of object by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``1(System.String,System.Object,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of object by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``1(System.String,System.Type[],System.Func{System.Object[],``0},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``1(System.String,System.Type[],System.Func{System.Object[],``0},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``2(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``3(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``4(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``5(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``6(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``7(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``2(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``3(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``4(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``5(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``6(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``7(System.String,System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``3(System.String,System.Func{``0,``1,``2},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``4(System.String,System.Func{``0,``1,``2,``3},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``5(System.String,System.Func{``0,``1,``2,``3,``4},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``3(System.String,System.Func{``0,``1,``2},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``4(System.String,System.Func{``0,``1,``2,``3},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``5(System.String,System.Func{``0,``1,``2,``3,``4},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``6(System.String,System.Func{``0,``1,``2,``3,``4,``5},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``7(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``8(System.String,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Object,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="map"></param>
            <param name="param"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query(Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``1(Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync(Dapper.CommandDefinition)">
            <summary>
            Query a collection of entity by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query a collection object by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query a collection entity by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``2(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``3(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``4(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``5(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``6(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``7(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``2(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``3(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``4(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``5(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``6(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``7(Dapper.CommandDefinition,System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``3(Dapper.CommandDefinition,System.Func{``0,``1,``2},System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``4(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3},System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``5(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4},System.String)">
            <summary>
            Query a collection of entity by given sql 
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``6(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5},System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``7(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6},System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.Query``8(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.String)">
            <summary>
            Query a collection of entity by given sql
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``3(Dapper.CommandDefinition,System.Func{``0,``1,``2},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``4(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``5(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``6(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``7(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryAsync``8(Dapper.CommandDefinition,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.String)">
            <summary>
            Query a collection of entity by given sql async
            </summary>
            <param name="command"></param>
            <param name="map"></param>
            <param name="splitOn"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirst(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirst(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirst``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirst(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirst(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirst``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstAsync(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefault(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefault(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefault``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefaultAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefaultAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first object or default by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefault(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefault(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object or default by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefault``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefaultAsync(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefaultAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query first object or default by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryFirstOrDefaultAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query first entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingle(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingle(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingle``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingle(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingle(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingle``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleAsync(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefault(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefault(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql and type
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefault``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity or default by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefaultAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql and type async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefaultAsync(System.Type,System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single object or default by given sql and type async
            </summary>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single entity or default by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefault(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefault(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object or default by given command definition and type
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefault``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefaultAsync(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefaultAsync(System.Type,Dapper.CommandDefinition)">
            <summary>
            Query single object or default by given command definition and type async
            </summary>
            <param name="type"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QuerySingleOrDefaultAsync``1(Dapper.CommandDefinition)">
            <summary>
            Query single entity or default by given command definition async
            </summary>
            <param name="command"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryMultiple(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple grid reader by given sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryMultipleAsync(System.String,System.Object,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple guild reader by given sql async
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryMultiple(Dapper.CommandDefinition)">
            <summary>
            Query multiple grid reader by given command definition
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Operations.IDapperQueryOperator.QueryMultipleAsync(Dapper.CommandDefinition)">
            <summary>
            Query multiple guild reader by given command definition async
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.SQLConvertResult">
            <summary>
            Sql convert result
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.SQLConvertResult" />
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.SQLConvertResult" />
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.#ctor(System.Text.StringBuilder,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.SQLConvertResult" />
            </summary>
            <param name="builder"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.#ctor(Cosmos.Dapper.SQLConvertResult,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.SQLConvertResult" />
            </summary>
            <param name="sql"></param>
            <param name="deepCopy"></param>
        </member>
        <member name="P:Cosmos.Dapper.SQLConvertResult.Sql">
            <summary>
            To get final sql
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.AppendSql(System.String)">
            <summary>
            Append sql.
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.AppendSqlLine(System.String)">
            <summary>
            Append sql at new line.
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.ResetSql(System.String)">
            <summary>
            Clear sql and append new sql.
            </summary>
            <param name="sql"></param>
        </member>
        <member name="P:Cosmos.Dapper.SQLConvertResult.Parameters">
            <summary>
            Dapper dynamic parameters
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.SQLConvertResult.WritableParameters">
            <summary>
            Writable parameters
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.CopyInstance">
            <summary>
            Copy instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.ToSQLCommand(System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType},Dapper.CommandFlags,System.Threading.CancellationToken)">
            <summary>
            Convert <see cref="T:Cosmos.Dapper.SQLConvertResult"/> to a <see cref="T:Dapper.CommandDefinition"/> object.
            </summary>
            <param name="transaction"></param>
            <param name="timeout"></param>
            <param name="commandType"></param>
            <param name="commandFlags"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.SQLConvertResult.ToSQLCommand(System.Object,System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType},Dapper.CommandFlags,System.Threading.CancellationToken)">
            <summary>
            Convert <see cref="T:Cosmos.Dapper.SQLConvertResult"/> to a <see cref="T:Dapper.CommandDefinition"/> object.
            </summary>
            <param name="explicitParams"></param>
            <param name="transaction"></param>
            <param name="timeout"></param>
            <param name="commandType"></param>
            <param name="commandFlags"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.OverrideSQLConvertResult">
            <summary>
            Override Sql convert result
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.OverrideSQLConvertResult.#ctor(Cosmos.Dapper.SQLConvertResult,System.Object,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.OverrideSQLConvertResult" />
            </summary>
            <param name="sql"></param>
            <param name="objectParameter"></param>
            <param name="enableNullParameter"></param>
        </member>
        <member name="P:Cosmos.Dapper.OverrideSQLConvertResult.ObjectParameter">
            <summary>
            Object parameter
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.OverrideSQLConvertResult.EnableNullParameter">
            <summary>
            Enable null parameter
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.OverrideSQLConvertResult.ToSQLCommand(System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType},Dapper.CommandFlags,System.Threading.CancellationToken)">
            <summary>
            To sql command
            </summary>
            <param name="transaction"></param>
            <param name="timeout"></param>
            <param name="commandType"></param>
            <param name="commandFlags"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.SQLMultiplePredicate">
            <summary>
            SQL Multiple Predicate
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SQLMultiplePredicate.#ctor">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.SQLMultiplePredicate" />
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.SQLMultiplePredicate.Items">
            <summary>
            Gets items of <see cref="T:Cosmos.Dapper.SQLMultiplePredicate" />
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.SQLMultiplePredicate.Add``1(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet)">
            <summary>
            Add Sql predicate
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.SQLMultiplePredicate.Add``1(System.Object)">
            <summary>
            Add
            </summary>
            <param name="id"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Cosmos.Dapper.SQLMultiplePredicate.SQLMultiplePredicateItem">
            <summary>
            Item of SQL Multiple Predicate
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.SQLMultiplePredicate.SQLMultiplePredicateItem.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.SQLMultiplePredicate.SQLMultiplePredicateItem.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.SQLMultiplePredicate.SQLMultiplePredicateItem.SortSet">
            <summary>
            Sort set
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Store.IStore`1">
            <summary>
            Interface for store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Cosmos.Dapper.Store.IStore`2">
            <summary>
            Interface for store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:Cosmos.Dapper.Store.IQueryableStore`1">
            <summary>
            Interface for queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`1.ExistById(System.Object)">
            <summary>
            Exist by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`1.ExistByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Exist by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`1.FindById(System.Object)">
            <summary>
            FInd entity by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`1.FindByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Find entity by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`1.GetOne(System.Object)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`1.GetOneAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.Store.IQueryableStore`1.ActionEntry">
            <summary>
            Gets Dapper Action entry
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.IQueryableStore`1.EntityEntry">
            <summary>
            Gets Dapper Action entry
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.IQueryableStore`1.AsynchronousActionEntry">
            <summary>
            Gets Dapper Action entry asynchronous
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.IQueryableStore`1.AsynchronousEntityEntry">
            <summary>
            Gets Dapper Action entry asynchronous
            </summary>
        </member>
        <member name="T:Cosmos.Dapper.Store.IQueryableStore`2">
            <summary>
            Interface for queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`2.ExistById(`1)">
            <summary>
            Exist by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`2.ExistByIdAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Exist by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`2.FindById(`1)">
            <summary>
            Find entity by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IQueryableStore`2.FindByIdAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Find entity by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1">
            <summary>
            Interface for dynamic expression queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Count
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Exist
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Exist async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindFirst(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindFirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindFirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindSingle(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindSingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.GetPage(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Query paged collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionQueryableStore`1.GetPageAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query paged collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.IPredicateQueryableStore`1">
            <summary>
            Interface for predicate queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.Count(System.Object)">
            <summary>
            Count
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.CountAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.Exist(System.Object)">
            <summary>
            Exist
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.ExistAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Exist async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindFirst(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindFirstAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindFirstOrDefault(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindFirstOrDefaultAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindSingle(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindSingleAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindSingleOrDefault(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindSingleOrDefaultAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.Find(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.Find(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.FindAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.GetPage(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Query a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateQueryableStore`1.GetPageAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.ISqlKataQueryableStore`1">
            <summary>
            Interface 
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.Count(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Gets count by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.CountAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Gets count by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.Exist(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Exist
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.ExistAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Exist async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindFirst(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindFirstAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindFirstOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindFirstOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindSingle(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindSingleAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindSingleOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindSingleOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.Find(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a collection of entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.FindAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
             Find a collection of entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.GetPage(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Int32,System.Int32)">
            <summary>
            Query a paged list of entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.ISqlKataQueryableStore`1.GetPageAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Int32,System.Int32)">
            <summary>
            Query a paged list of entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.IWriteableStore`1">
            <summary>
            Interface for writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.Add(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},`0)">
            <summary>
            Add
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.AddAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},`0)">
            <summary>
            Add async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.Add(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>
            Add
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.Add(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Add
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.AddAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Add async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.Update(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Object)">
            <summary>
            Update
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.Update(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Update
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.UpdateAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Object)">
            <summary>
            Update async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.UpdateAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Update async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.UnsafeRemove(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Unsafe remove
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`1.UnsafeRemoveAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Unsafe remove async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.IWriteableStore`2">
            <summary>
            Interface for queryable store
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`2.Remove(`1)">
            <summary>
            Remove
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`2.RemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Remove async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`2.UnsafeRemove(`1)">
            <summary>
            Remove
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IWriteableStore`2.UnsafeRemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Remove async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.IDynamicExpressionWriteableStore`1">
            <summary>
            Interface for dynamic expression writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionWriteableStore`1.Remove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionWriteableStore`1.RemoveAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionWriteableStore`1.UnsafeRemove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IDynamicExpressionWriteableStore`1.UnsafeRemoveAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.IPredicateWriteableStore`1">
            <summary>
            Interface for predicate writeable store
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.Remove(System.Object)">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.RemoveAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.UnsafeRemove(System.Object)">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.UnsafeRemoveAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.RemoveById(System.Object)">
            <summary>
            Remove by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.RemoveByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.UnsafeRemoveById(System.Object)">
            <summary>
            Remove by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.IPredicateWriteableStore`1.UnsafeRemoveByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.RepositoryBase`2">
            <summary>
            Repository base
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.RepositoryBase`2.#ctor(`0,System.Linq.Expressions.Expression{System.Func{`0,Cosmos.Dapper.IDapperSet{`1}}},System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Store.RepositoryBase`2" />
            </summary>
            <param name="context"></param>
            <param name="bindingExpression"></param>
            <param name="includeUnsafeOpt"></param>
        </member>
        <member name="P:Cosmos.Dapper.Store.RepositoryBase`2.CurrentTraceId">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Dapper.Store.RepositoryBase`2.UnitOfWork">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Dapper.Store.RepositoryBase`3">
            <summary>
            Repository base
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.RepositoryBase`3.#ctor(`0,System.Linq.Expressions.Expression{System.Func{`0,Cosmos.Dapper.IDapperSet{`1}}},System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Store.RepositoryBase`3" />
            </summary>
            <param name="context"></param>
            <param name="bindingExpression"></param>
            <param name="includeUnsafeOpt"></param>
        </member>
        <member name="M:Cosmos.Dapper.Store.RepositoryBase`3.CreateRepoLevelDataFilterCache">
            <summary>
            Create repository level data filter cache
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.Store.RepositoryBase`3.CurrentTraceId">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Dapper.Store.RepositoryBase`3.UnitOfWork">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Dapper.Store.StoreBase`2">
            <summary>
            Store base
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.#ctor(`0,System.Linq.Expressions.Expression{System.Func{`0,Cosmos.Dapper.IDapperSet{`1}}},System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Dapper.Store.StoreBase`2" />
            </summary>
            <param name="context"></param>
            <param name="bindingExpression"></param>
            <param name="includeUnsafeOpt"></param>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.RawTypedContext">
            <summary>
            Gets raw typed context
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.IncludeUnsafeOpt">
            <summary>
            Gets include unsafe opt
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.FilteringExpression">
            <summary>
            Gets filtering expression
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.CreateRepoLevelDataFilterCache">
            <summary>
            Create repository level data filter cache
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.RepoLevelDataFilters">
            <summary>
            Gets repository level data filters
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.SqlKataRepoLevelDataFilters">
            <summary>
            Gets repository level SqlKata data filters
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.ActionEntry">
            <summary>
            Gets DapperAction entry
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.AsynchronousActionEntry">
            <summary>
            Gets asynchronous DapperAction entry
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Add(`1)">
            <summary>
            Add
            </summary>
            <param name="entity"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Add(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Add
            </summary>
            <param name="entities"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.AddAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Add async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.AddAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Add async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Add(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},`1)">
            <summary>
            Add
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.AddAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},`1)">
            <summary>
            Add async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Add(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>
            Add
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Add(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Add
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.AddAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Add Async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Count(System.Object)">
            <summary>
            Count
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.CountAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Count(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Count
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Count async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Count(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Count
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.CountAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Count async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.EntityType">
            <summary>
            Entity type
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.DeletableEntity">
            <summary>
            To flag this entity type has impl IDelete interface or not.
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.BindingPropertyName">
            <summary>
            Binding property name
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.EntityEntry">
            <summary>
            Gets entity entry for DapperAction
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.AsynchronousEntityEntry">
            <summary>
            Gets entity entry fot asynchronous DapperAction
            </summary>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`2.Set">
            <summary>
            Gets DapperSet
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.ExistById(System.Object)">
            <summary>
            Exist by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.ExistByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Exist by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Exist(System.Object)">
            <summary>
            Exist by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.ExistAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Exist by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Exist(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Exist by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Exist by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Exist(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Exist by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.ExistAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.String[])">
            <summary>
            Exist by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Find a collection of paged result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find a collection of paged results by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Find a collection of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Find a collection of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Find(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a collection of entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find a collection of entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindById(System.Object)">
            <summary>
            Find an entity by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Find an entity by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirst(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Find first result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find first  result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirst(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirst(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirst(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Find first or default result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find first or default result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefault(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefaultAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find first entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find first entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindFirstOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find first entity or default by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingle(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Find Single result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find Single result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingle(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingle(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingle(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Find single or default result by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Find single or default result by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefault(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefaultAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Boolean)">
            <summary>
            Find single entity or default by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Threading.CancellationToken)">
            <summary>
            Find single entity or default by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefault(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.FindSingleOrDefaultAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Find single entity or default by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetOne(System.Object)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetOneAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetOne(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Get one or null...
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetOneAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Get one or null...
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPage(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Query pageable results by given condition
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPageAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query pageable results by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPage(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Query a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPageAsync(System.Object,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPage(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Query a paged list of entity by given condition
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="buffered"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPageAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query a paged list of entity by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPage(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Int32,System.Int32)">
            <summary>
            Query a paged list of entity by given SqlKata function
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.GetPageAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Int32,System.Int32)">
            <summary>
            Query a paged list of entity by given SqlKata function async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Remove(`1)">
            <summary>
            Remove
            </summary>
            <param name="entity"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Remove(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Remove range
            </summary>
            <param name="entities"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.RemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Remove async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.RemoveAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Remove range async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Remove(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.RemoveAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Remove(System.Object)">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.RemoveAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.RemoveById(System.Object)">
            <summary>
            Remove entity by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.RemoveByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove entity by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemove(`1)">
            <summary>
            Unsafe remove
            </summary>
            <param name="entity"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Unsafe remove async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemove(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Unsafe remove
            </summary>
            <param name="entities"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Unsafe remove async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemove(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemove(System.Object)">
            <summary>
            Remove by given condition
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove by given condition async
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveById(System.Object)">
            <summary>
            Remove entity by given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove entity by given id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemove(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Unsafe remove
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UnsafeRemoveAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder})">
            <summary>
            Unsafe remove async
            </summary>
            <param name="sqlKataFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Update(`1)">
            <summary>
            Update
            </summary>
            <param name="entity"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Update(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Update
            </summary>
            <param name="entities"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UpdateAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entity"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1},System.Threading.CancellationToken)">
            <summary>
            Update async
            </summary>
            <param name="entities"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Update(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Object)">
            <summary>
            Update
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UpdateAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Object)">
            <summary>
            Update async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.Update(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Update
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`2.UpdateAsync(System.Func{Cosmos.Data.SqlKata.QueryBuilder,Cosmos.Data.SqlKata.QueryBuilder},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Update async
            </summary>
            <param name="sqlKataFunc"></param>
            <param name="newValues"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Dapper.Store.StoreBase`3">
            <summary>
            Store base
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.#ctor(`0,System.Linq.Expressions.Expression{System.Func{`0,Cosmos.Dapper.IDapperSet{`1}}},System.Boolean)">
            <summary>
            Store base
            </summary>
            <param name="context"></param>
            <param name="bindingExpression"></param>
            <param name="includeUnsafeOpt"></param>
        </member>
        <member name="P:Cosmos.Dapper.Store.StoreBase`3.KeyType">
            <summary>
            Key type
            </summary>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.ExistById(`2)">
            <summary>
            Exist entity by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.ExistByIdAsync(`2,System.Threading.CancellationToken)">
            <summary>
            Exist entity by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.FindById(`2)">
            <summary>
            Find entity by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.FindByIdAsync(`2,System.Threading.CancellationToken)">
            <summary>
            Find entity by id async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.GetOne(`2)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.GetOneAsync(`2,System.Threading.CancellationToken)">
            <summary>
            Get one or null
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.Remove(`2)">
            <summary>
            Remove
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.RemoveAsync(`2,System.Threading.CancellationToken)">
            <summary>
            Remove async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.UnsafeRemove(`2)">
            <summary>
            Remove
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Dapper.Store.StoreBase`3.UnsafeRemoveAsync(`2,System.Threading.CancellationToken)">
            <summary>
            Remove async
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.QueryBuilderExtensions">
            <summary>
            Extensions for query builder
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Execute(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.ExecuteAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``1(Cosmos.Data.SqlKata.QueryBuilder,System.Type[],System.Func{System.Object[],``0},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``3(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``4(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``5(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``6(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4,``5},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``7(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``8(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Type[],System.Func{System.Object[],``0},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="types"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``3(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``4(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``5(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``6(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4,``5},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``7(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4,``5,``6},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``8(Cosmos.Data.SqlKata.QueryBuilder,System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.Query(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.String,System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="sql"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirst(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirst(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirst``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstOrDefault``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstOrDefault(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstOrDefault(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstOrDefaultAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryFirstOrDefaultAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryMultiple(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QueryMultipleAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingle(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingle(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingle``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingleAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingleAsync(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingleOrDefault``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingleOrDefaultAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async...
            </summary>
            <param name="query"></param>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilderExtensions.QuerySingleOrDefaultAsync``1(Cosmos.Data.SqlKata.QueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions">
            <summary>
            Extensions for entity query builder
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.FindOne``1(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Find one
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.FindOneAsync``1(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Find one async
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UniqueResultToInt(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to int
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UniqueResultToIntAsync(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to int async
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UniqueResultToLong(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to long
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UniqueResultToLongAsync(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to long async
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UniqueResult``1(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UniqueResultAsync``1(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result async
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.List``1(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            List...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.ListAsync``1(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            List async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.Update(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Update...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.UpdateAsync(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Update async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.Insert(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Insert...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilderExtensions.InsertAsync(Cosmos.Data.SqlKata.EntityQueryBuilder,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Insert async...
            </summary>
            <param name="query"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.QueryBuilder">
            <summary>
            Query builder
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.#ctor(Cosmos.Dapper.Core.IDapperConnector,SqlKata.Compilers.Compiler,Cosmos.Dapper.DapperOptions,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.SqlKata.QueryBuilder" />
            </summary>
            <param name="connector"></param>
            <param name="compiler"></param>
            <param name="options"></param>
            <param name="aloneMode"></param>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.#ctor(Cosmos.Dapper.Core.IDapperConnector,SqlKata.Compilers.Compiler,Cosmos.Dapper.DapperOptions,System.String,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.SqlKata.QueryBuilder" />
            </summary>
            <param name="connector"></param>
            <param name="compiler"></param>
            <param name="options"></param>
            <param name="table"></param>
            <param name="aloneMode"></param>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Execute(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Execute(System.Nullable{System.Data.CommandType})">
            <summary>
            Execute...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.ExecuteAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Execute async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.ExecuteAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Execute async...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query(System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query(System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``1(System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``1(System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query(System.Type,System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query(System.Type,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="type"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirst(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirst(System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirst(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirst(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirst``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirst``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query first...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstAsync(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstAsync(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query first async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefault``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefault``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefault(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefault(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefault(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefault(System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefaultAsync(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefaultAsync(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefaultAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryFirstOrDefaultAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query first or default async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryMultiple(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryMultiple(System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryMultipleAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryMultipleAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Query multiple async...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingle(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingle(System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingle(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingle(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingle``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingle``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query single...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleAsync(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleAsync(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single async...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleOrDefault``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleOrDefault``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleOrDefaultAsync(System.Type,System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async...
            </summary>
            <param name="type"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleOrDefaultAsync(System.Type,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async...
            </summary>
            <param name="type"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleOrDefaultAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QuerySingleOrDefaultAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Query single or default async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``1(System.Type[],System.Func{System.Object[],``0},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="types"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``1(System.Type[],System.Func{System.Object[],``0},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="types"></param>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``3(System.Func{``0,``1,``2},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``3(System.Func{``0,``1,``2},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``4(System.Func{``0,``1,``2,``3},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``4(System.Func{``0,``1,``2,``3},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``5(System.Func{``0,``1,``2,``3,``4},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``5(System.Func{``0,``1,``2,``3,``4},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``6(System.Func{``0,``1,``2,``3,``4,``5},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``6(System.Func{``0,``1,``2,``3,``4,``5},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``7(System.Func{``0,``1,``2,``3,``4,``5,``6},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``7(System.Func{``0,``1,``2,``3,``4,``5,``6},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.Query``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``1(System.Type[],System.Func{System.Object[],``0},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="types"></param>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``1(System.Type[],System.Func{System.Object[],``0},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="types"></param>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``3(System.Func{``0,``1,``2},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``3(System.Func{``0,``1,``2},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``4(System.Func{``0,``1,``2,``3},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``4(System.Func{``0,``1,``2,``3},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``5(System.Func{``0,``1,``2,``3,``4},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``5(System.Func{``0,``1,``2,``3,``4},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``6(System.Func{``0,``1,``2,``3,``4,``5},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``6(System.Func{``0,``1,``2,``3,``4,``5},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``7(System.Func{``0,``1,``2,``3,``4,``5,``6},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``7(System.Func{``0,``1,``2,``3,``4,``5,``6},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Data.IDbTransaction,System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.QueryBuilder.QueryAsync``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},System.Boolean,System.String,System.Nullable{System.Data.CommandType})">
            <summary>
            Query async...
            </summary>
            <param name="map"></param>
            <param name="buffered"></param>
            <param name="splitOn"></param>
            <param name="commandType"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.EntityQueryBuilder">
            <summary>
            Entity Query Builder
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.#ctor(Cosmos.Dapper.Core.IDapperConnector,SqlKata.Compilers.Compiler,Cosmos.Dapper.DapperOptions,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.SqlKata.EntityQueryBuilder" />
            </summary>
            <param name="connector"></param>
            <param name="compiler"></param>
            <param name="options"></param>
            <param name="aloneMode"></param>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.#ctor(Cosmos.Dapper.Core.IDapperConnector,SqlKata.Compilers.Compiler,System.String,Cosmos.Dapper.DapperOptions,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.SqlKata.EntityQueryBuilder" />
            </summary>
            <param name="connector"></param>
            <param name="compiler"></param>
            <param name="table"></param>
            <param name="options"></param>
            <param name="aloneMode"></param>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.FindOne``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Find one...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.FindOne``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Find one...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.FindOneAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Find one async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.FindOneAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Find one async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToInt(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to int...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToInt(System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to int...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToIntAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to int async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToIntAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to int async...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToLong(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to long...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToLong(System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to long...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToLongAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to long async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultToLongAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result to long async...
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResult``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResult``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.UniqueResultAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Unique result async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.List``1(System.Data.IDbTransaction,System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            List...
            </summary>
            <param name="transaction"></param>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.List``1(System.Boolean,System.Nullable{System.Data.CommandType})">
            <summary>
            List...
            </summary>
            <param name="buffered"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.ListAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            List async...
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.ListAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            List async...
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveUpdate(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save update
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveUpdate(System.Nullable{System.Data.CommandType})">
            <summary>
            Save update
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveUpdateAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save update async
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveUpdateAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Save update async
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsert(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsert(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertAsync(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert async
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertAsync(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert async
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForMysql``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for mysql
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForMysql``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for mysql
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForMysqlAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for mysql async
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForMysqlAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for mysql async
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForPostgreSql``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for postgresql
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForPostgreSql``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for postgresql
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForPostgreSqlAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
             Save insert for postgresql async
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForPostgreSqlAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for postgresql async
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForSqlServer``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for Microsoft SQL Server
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForSqlServer``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for Microsoft SQL Server
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForSqlServerAsync``1(System.Data.IDbTransaction,System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for Microsoft SQL Server async
            </summary>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.SaveInsertForSqlServerAsync``1(System.Nullable{System.Data.CommandType})">
            <summary>
            Save insert for Microsoft SQL Server async
            </summary>
            <param name="commandType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.ReplaceSqlToGuid``1(SqlKata.SqlResult)">
            <summary>
            Replace sql to guid
            </summary>
            <param name="result"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.EntityQueryBuilder.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Cosmos.Data.SqlKata.MultipleQueryBuilder">
            <summary>
            Multiple query builder
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.#ctor(Cosmos.Dapper.Core.IDapperConnector,SqlKata.Compilers.Compiler)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.SqlKata.MultipleQueryBuilder" />
            </summary>
            <param name="connector"></param>
            <param name="compiler"></param>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.Add``1(SqlKata.Query,Cosmos.Data.SqlKata.ResultType)">
            <summary>
            Add
            </summary>
            <param name="query"></param>
            <param name="resultType"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddSelect``1(SqlKata.Query)">
            <summary>
            Add select
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddSelect``1(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add select
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddUpdate(SqlKata.Query)">
            <summary>
            Add update
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddUpdate(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add update
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddDelete(SqlKata.Query)">
            <summary>
            Add delete
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddDelete(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add delete
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddInsert``1(SqlKata.Query)">
            <summary>
            Add insert
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.AddInsert``1(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add insert
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.ExecuteMultiple``1">
            <summary>
            Execute multiple
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.ExecuteMultipleAsync``1">
            <summary>
            Execute multiple async
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GetGridReaderResultsMultiple``1(Dapper.SqlMapper.GridReader)">
            <summary>
            Gets grid reader results multiple
            </summary>
            <param name="gridReader"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GetAffectedRowsResultsMultiple``1(System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Gets affected rows results multiple
            </summary>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GetAffectedRowsResultsMultipleAsync``1(System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Gets affected rows results multiple async
            </summary>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GridReaderResults(System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Grid reader results
            </summary>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GridReaderResultsAsync(System.Data.IDbTransaction,System.Nullable{System.Int32},System.Nullable{System.Data.CommandType})">
            <summary>
            Grid reader results async
            </summary>
            <param name="transaction"></param>
            <param name="commandTimeout"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.ChangeTypeToType``1(System.Object)">
            <summary>
            Change type to type
            </summary>
            <param name="value"></param>
            <typeparam name="TType"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GetSqlResult">
            <summary>
            Get sql result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.GetQueries">
            <summary>
            Get queries
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.MultipleQueryBuilder.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IQueryBuilderMultipleDeleteDapper">
            <summary>
            Interface for Quert Builder Multiple Delete Dapper
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleDeleteDapper.AddDelete(SqlKata.Query)">
            <summary>
            Add delete
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleDeleteDapper.AddDelete(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add delete
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IQueryBuilderMultipleExecuteDapper`1">
            <summary>
            Interface for Query builder multiple execute dapper...
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleExecuteDapper`1.ExecuteMultiple">
            <summary>
            Execute multiple
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleExecuteDapper`1.ExecuteMultipleAsync">
            <summary>
            Execute multiple async
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IQueryBuilderMultipleInsertDapper">
            <summary>
            Interface for query builder multiple insert dapper
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleInsertDapper.AddInsert``1(SqlKata.Query)">
            <summary>
            Add insert
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleInsertDapper.AddInsert``1(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add insert
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IQueryBuilderMultipleSelectDapper">
            <summary>
            Interface for query builder multiple select dapper
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleSelectDapper.AddSelect``1(SqlKata.Query)">
            <summary>
            Add select
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleSelectDapper.AddSelect``1(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add select
            </summary>
            <param name="query"></param>
            <typeparam name="TReturn"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IQueryBuilderMultipleUpdateDapper">
            <summary>
            Interface for query builder multiple update dapper
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleUpdateDapper.AddUpdate(SqlKata.Query)">
            <summary>
            Add update
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IQueryBuilderMultipleUpdateDapper.AddUpdate(System.Func{SqlKata.Query,SqlKata.Query})">
            <summary>
            Add update
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IResultAffectedRows">
            <summary>
            Interface for result affected rows
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.IResultAffectedRows.AffectedRows">
            <summary>
            Affected rows
            </summary>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IResultBase">
            <summary>
            Interface for result base
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.IResultBase.ResultType">
            <summary>
            Result type
            </summary>
        </member>
        <member name="T:Cosmos.Data.SqlKata.IResultItems">
            <summary>
            Interface for result items
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.IResultItems.Value">
            <summary>
            Gets or sets value
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.IResultItems.GetValue``1">
            <summary>
            Get value
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.ResultAffectedRows">
            <summary>
            Result affected rows
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.ResultAffectedRows.AffectedRows">
            <summary>
            Affected rows
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.ResultAffectedRows.ResultType">
            <summary>
            Result type
            </summary>
        </member>
        <member name="T:Cosmos.Data.SqlKata.ResultItems">
            <summary>
            Result items
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.ResultItems.Value">
            <summary>
            Gets or sets value
            </summary>
        </member>
        <member name="P:Cosmos.Data.SqlKata.ResultItems.ResultType">
            <summary>
            Result type
            </summary>
        </member>
        <member name="M:Cosmos.Data.SqlKata.ResultItems.GetValue``1">
            <summary>
            Get value...
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SqlKata.ResultType">
            <summary>
            Result type
            </summary>
        </member>
        <member name="F:Cosmos.Data.SqlKata.ResultType.Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:Cosmos.Data.SqlKata.ResultType.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Cosmos.Data.SqlKata.ResultType.Select">
            <summary>
            Select
            </summary>
        </member>
        <member name="F:Cosmos.Data.SqlKata.ResultType.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Cosmos.Data.SqlKata.ResultType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Cosmos.Data.SQLOrder">
            <summary>
            Sql Order by
            </summary>
        </member>
        <member name="P:Cosmos.Data.SQLOrder.Default">
            <summary>
            Get default sort
            </summary>
        </member>
        <member name="M:Cosmos.Data.SQLOrder.By``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},Cosmos.Data.Statements.SQLSortType)">
            <summary>
            Order by
            </summary>
            <param name="memberGetter"></param>
            <param name="type"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TMember"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SQLOrder.ThenBy``2(Cosmos.Data.SQLOrderBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Cosmos.Data.Statements.SQLSortType)">
            <summary>
            Then order by
            </summary>
            <param name="builder"></param>
            <param name="memberGetter"></param>
            <param name="type"></param>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TMember"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SQLOrder`1">
            <summary>
            Sql order by
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Cosmos.Data.SQLOrder`1.By``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Cosmos.Data.Statements.SQLSortType)">
            <summary>
            Order by
            </summary>
            <param name="memberGetter"></param>
            <param name="type"></param>
            <typeparam name="TMember"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SQLOrder`1.ThenBy``1(Cosmos.Data.SQLOrderBuilder{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},Cosmos.Data.Statements.SQLSortType)">
            <summary>
            Then order by
            </summary>
            <param name="builder"></param>
            <param name="memberGetter"></param>
            <param name="type"></param>
            <typeparam name="TMember"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.SQLOrderBuilder`1">
            <summary>
            SQL order builder
            </summary>
        </member>
        <member name="M:Cosmos.Data.SQLOrderBuilder`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Cosmos.Data.Statements.SQLSortType)">
            <summary>
            Then by
            </summary>
            <param name="memberGetter"></param>
            <param name="type"></param>
            <typeparam name="TMember"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.SQLOrderBuilder`1.op_Implicit(Cosmos.Data.SQLOrderBuilder{`0})~Cosmos.Data.Statements.SQLSortSet">
            <summary>
            Sql sort set
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLBetweenPredicate">
            <summary>
            Interface for Sql between predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLBetweenPredicate.PropertyName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLBetweenPredicate.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLBetweenPredicate.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLComparePredicate">
            <summary>
            Interface Sql compare predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLComparePredicate.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLComparePredicate.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLExistsPredicate">
            <summary>
            Interface for Sql exists predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLExistsPredicate.Predicate">
            <summary>
            Predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLExistsPredicate.Not">
            <summary>
             Not
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLFieldPredicate">
            <summary>
            Interface sql field predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLFieldPredicate.Value">
            <summary>
            Gets ot sets value
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLGenerator">
            <summary>
            Interface for sql generator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLGenerator.Configuration">
            <summary>
            Gets configuration
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.Select(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Select...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.SelectPaged(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Select paged...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.SelectSet(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Select set...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.Count(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Count...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.Insert(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Insert...
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.Update(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Update...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="parameters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.Delete(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Delete...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.IdentitySql(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Identity sql
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.GetTableName(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Gets table name
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.GetColumnName(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Dapper.Mapper.IPropertyMap,System.Boolean)">
            <summary>
            Gets column name 
            </summary>
            <param name="map"></param>
            <param name="property"></param>
            <param name="includeAlias"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.GetColumnName(Cosmos.Dapper.Mapper.IClassMap,System.String,System.Boolean)">
            <summary>
            Gets column name
            </summary>
            <param name="map"></param>
            <param name="propertyName"></param>
            <param name="includeAlias"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLGenerator.SupportsMultipleStatements">
            <summary>
            Support multiple statements
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLBasePredicate">
            <summary>
            Interface for sql base predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLBasePredicate.PropertyName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLPredicate">
            <summary>
            Interface for Sql predicate
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.ISQLPredicate.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLPredicateGroup">
            <summary>
            Interface for Sql predicate group
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLPredicateGroup.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLPredicateGroup.Predicates">
            <summary>
            Predicates
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.ISQLPropertyPredicate">
            <summary>
            Interface for Sql property predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.ISQLPropertyPredicate.PropertyName2">
            <summary>
            Property name
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLBasePredicate">
            <summary>
            Sql base predicate
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLBasePredicate.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLBasePredicate.EntityType">
            <summary>
            Entity type
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLBasePredicate.PropertyName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLBasePredicate.GetColumnName(System.Type,Cosmos.Data.Statements.ISQLGenerator,System.String)">
            <summary>
            Gets column name
            </summary>
            <param name="entityType"></param>
            <param name="sqlGenerator"></param>
            <param name="propertyName"></param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLBetweenPredicate`1">
            <summary>
            Sql between predicate
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLBetweenPredicate`1.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLBetweenPredicate`1.Value">
            <summary>
            Gets or sets value
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLBetweenPredicate`1.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLBetweenValues">
            <summary>
            Sql between values
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLBetweenValues.Value1">
            <summary>
            Value 1
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLBetweenValues.Value2">
            <summary>
            Value 2
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLComparePredicate">
            <summary>
            Sql compare predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLComparePredicate.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLComparePredicate.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLComparePredicate.GetOperatorString">
            <summary>
            Get operator string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLExistsPredicate`1">
            <summary>
            Sql exists predicate
            </summary>
            <typeparam name="TSub"></typeparam>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLExistsPredicate`1.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLExistsPredicate`1.Predicate">
            <summary>
            Gets or sets predicate
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLExistsPredicate`1.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLExistsPredicate`1.GetClassMapper(System.Type,Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Get class mapper
            </summary>
            <param name="type"></param>
            <param name="config"></param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLFieldPredicate`1">
            <summary>
            Sql field predicate
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLFieldPredicate`1.Value">
            <summary>
            Gets or sets value
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLFieldPredicate`1.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLGenerator">
            <summary>
            Get generator
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.#ctor(Cosmos.Dapper.IDapperMappingConfig)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Data.Statements.SQLGenerator" />
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLGenerator.Configuration">
            <summary>
            Gets configuration
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.Select(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Select
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.SelectPaged(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Select paged
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.SelectSet(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.SQLSortSet,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Select set...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="sort"></param>
            <param name="limitFrom"></param>
            <param name="limitTo"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.Count(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Count...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.Insert(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Insert...
            </summary>
            <param name="classMap"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.Update(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Update...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="parameters"></param>
            <param name="ignoreAllKeyProperties"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.Delete(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Data.Statements.ISQLPredicate,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Delete...
            </summary>
            <param name="classMap"></param>
            <param name="predicate"></param>
            <param name="parameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.IdentitySql(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Identity sql
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.GetTableName(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Gets table name
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.GetColumnName(Cosmos.Dapper.Mapper.IClassMap,Cosmos.Dapper.Mapper.IPropertyMap,System.Boolean)">
            <summary>
            Gets column name
            </summary>
            <param name="map"></param>
            <param name="property"></param>
            <param name="includeAlias"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.GetColumnName(Cosmos.Dapper.Mapper.IClassMap,System.String,System.Boolean)">
            <summary>
            Get column name
            </summary>
            <param name="map"></param>
            <param name="propertyName"></param>
            <param name="includeAlias"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.SupportsMultipleStatements">
            <summary>
            Supports multiple statements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLGenerator.BuildSelectColumns(Cosmos.Dapper.Mapper.IClassMap)">
            <summary>
            Build select columns
            </summary>
            <param name="classMap"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLGeneratorExtensions">
            <summary>
            Extensions for Sql generator
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLGroupOperator">
            <summary>
            Sql group operator
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLGroupOperator.AND">
            <summary>
            And...
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLGroupOperator.OR">
            <summary>
            Or...
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLOperatorSlim">
            <summary>
            Sql operator
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLOperatorSlim.EQ">
            <summary>
            Equals to...
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLOperatorSlim.GT">
            <summary>
            Greater than...
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLOperatorSlim.GE">
            <summary>
            Greater than or equals to...
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLOperatorSlim.LT">
            <summary>
            Less than...
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLOperatorSlim.LE">
            <summary>
            Less than or equals to...
            </summary>
        </member>
        <member name="F:Cosmos.Data.Statements.SQLOperatorSlim.LIKE">
            <summary>
            Like...
            </summary>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLPredicateGroup">
            <summary>
            Sql predicate group
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLPredicateGroup.Operator">
            <summary>
            Gets or sets operator
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLPredicateGroup.Predicates">
            <summary>
            Gets or sets predicates
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLPredicateGroup.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLPredicateMerger">
            <summary>
            Sql predicate merger
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLPredicateMerger.Merge(Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Merger...
            </summary>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLPredicateMerger.Merge(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Merger...
            </summary>
            <param name="where"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLPredicateMerger.Join(Cosmos.Data.Statements.ISQLPredicate,Cosmos.Data.Statements.ISQLPredicate[])">
            <summary>
            Join...
            </summary>
            <param name="where"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLPropertyPredicate`2">
            <summary>
            Sql property predicate
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLPropertyPredicate`2.PropertyName2">
            <summary>
            Property name 2
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLPropertyPredicate`2.GetSql(Cosmos.Data.Statements.ISQLGenerator,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get sql
            </summary>
            <param name="sqlGenerator"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Data.Statements.SQLSortSet">
            <summary>
            Sql sort set
            </summary>
        </member>
        <member name="P:Cosmos.Data.Statements.SQLSortSet.IsFactoryMode">
            <summary>
            To flag this sql sort set is func mode or not
            </summary>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLSortSet.ToString">
            <summary>
            To string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Data.Statements.SQLSortSet.ToStrings(Cosmos.Dapper.Mapper.IClassMap,System.Func{Cosmos.Dapper.Mapper.IClassMap,System.String,System.Boolean,System.String})">
            <summary>
            To strings
            </summary>
            <param name="classMap"></param>
            <param name="columnNameFunc"></param>
            <returns></returns>
        </member>
    </members>
</doc>
